<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Vue源码解析之AST抽象语法树到真实节点的过程</title>
    <url>/2021/11/17/Vue%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B9%8BAST%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%E5%88%B0%E7%9C%9F%E5%AE%9E%E8%8A%82%E7%82%B9%E7%9A%84%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Vue源码解析之AST抽象语法树到真实节点的过程"><a href="#Vue源码解析之AST抽象语法树到真实节点的过程" class="headerlink" title="Vue源码解析之AST抽象语法树到真实节点的过程"></a>Vue源码解析之AST抽象语法树到真实节点的过程</h1><p> 模板语法=&gt;抽象语法树=&gt;渲染函数（h函数，h函数既是AST的产物，也是vnode的起源）=&gt;虚拟节点=&gt;界面</p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>axios 在vue中全局配置拦截器和baseurl</title>
    <url>/2021/11/18/axios-%E5%9C%A8vue%E4%B8%AD%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E6%8B%A6%E6%88%AA%E5%99%A8%E5%92%8Cbaseurl/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">axios.defaults.baseURL = <span class="string">&#x27;http://127.0.0.1:8888/api/private/v1/&#x27;</span></span><br><span class="line">axios.interceptors.request.use(</span><br><span class="line"><span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>)) &#123; <span class="comment">// 判断token是否存在</span></span><br><span class="line">    config.headers.Authorization = sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>) <span class="comment">// 将token设置成请求头</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(err)</span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">Vue.prototype.$http = axios</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>axios</category>
      </categories>
      <tags>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 定制bridge</title>
    <url>/2021/11/18/docker-%E5%AE%9A%E5%88%B6bridge/</url>
    <content><![CDATA[<h2 id="docker-定制bridge"><a href="#docker-定制bridge" class="headerlink" title="docker 定制bridge"></a>docker 定制bridge</h2><ol>
<li>安装网卡编辑软件<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get  install bridge-utils</span><br></pre></td></tr></table></figure></li>
<li>设置一个新网卡</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl addbr br0</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>为新添加的网卡设置网关和子网掩码<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig br0  172.18.2.1 netmask 255.255.0.0</span><br></pre></td></tr></table></figure></li>
<li>添加配置文件：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;DOCKER_OPTS=&quot;-b=br0&quot;&#x27;</span> &gt;&gt; /etc/default/docker</span><br><span class="line">mkdir -p /etc/systemd/system/docker.service.d</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/systemd/system/docker.service.d/Using_Enviroment_File.conf</span><br><span class="line"><span class="comment">#写入以下内容</span></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=-/etc/default/docker</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=/usr/bin/dockerd -H fd:// <span class="variable">$DOCKER_OPTS</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>重新加载并启动服务<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">service docker restart</span><br></pre></td></tr></table></figure></li>
<li>查看docker的bridge<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network inspect bridge</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="这里发现已经配置已经变化"><a href="#这里发现已经配置已经变化" class="headerlink" title="这里发现已经配置已经变化"></a>这里发现已经配置已经变化</h2><h2 id="Done"><a href="#Done" class="headerlink" title="Done."></a>Done.</h2>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>git commend</title>
    <url>/2021/11/18/git-commend/</url>
    <content><![CDATA[<h5 id="设置用户名与邮箱（用户标识，必要）"><a href="#设置用户名与邮箱（用户标识，必要）" class="headerlink" title="设置用户名与邮箱（用户标识，必要）"></a>设置用户名与邮箱（用户标识，必要）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;name&quot;</span><br><span class="line">git config --global user.email &quot;email&quot;</span><br></pre></td></tr></table></figure>

<h5 id="初始化并跟踪远程分支"><a href="#初始化并跟踪远程分支" class="headerlink" title="初始化并跟踪远程分支:"></a>初始化并跟踪远程分支:</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/jiujue/branchName.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<h5 id="代码暂存-用于debug-："><a href="#代码暂存-用于debug-：" class="headerlink" title="代码暂存(用于debug)："></a>代码暂存(用于debug)：</h5><ol>
<li><p>暂存工作状态<code>git stash</code></p>
</li>
<li><p>创建并切换到debug分支<code>git checkout -b bug01</code></p>
</li>
<li><p>处理错误 debug …</p>
</li>
<li><p><code>git checkout master</code></p>
</li>
<li><p>合并debug后的分支<code>git merge bug01</code></p>
</li>
<li><p>查看暂存的工作状态<code>git stash list</code></p>
</li>
<li><p>回到原工作状态 : <code>git pop</code></p>
</li>
</ol>
<h5 id="分支相关"><a href="#分支相关" class="headerlink" title="分支相关"></a>分支相关</h5><ol>
<li><p>图形化显示 : git log –graph</p>
</li>
<li><p>查看分支：git branch </p>
</li>
<li><p>创建分支：git branch name </p>
</li>
<li><p>切换分支：git checkout name 工作区文件内容会立即变化成对应分支的内容 </p>
</li>
<li><p>创建+切换分支：git checkout -b name </p>
</li>
<li><p>合并某分支到当前分支：git merge name </p>
</li>
<li><p>删除分支：git branch -d name</p>
</li>
<li><p>查看分支合并情况：git log –graph –pretty=oneline –abbrev-commit</p>
</li>
<li><p>合并分支（fast forward）：git merge name </p>
</li>
<li><p>合并分支（禁用 Fast forward）：git merge –no-ff -m “描述” dev</p>
</li>
<li><p>本地分支重命名<br>git branch -m oldName newName</p>
</li>
<li><p>将重命名后的分支推送到远程<br>git push origin newName</p>
</li>
<li><p>删除远程的旧分支<br>git push –delete origin oldName<br>显示如下，说明删除成功<br>To <a href="https://xx.com/xx/xx.git">https://xx.com/xx/xx.git</a><br>[deleted] old-name</p>
</li>
<li><p>如何在某个分支上修改<br>git fetch (拉取远端分支信息)</p>
<p>git branch -av 查看所有分支信息</p>
<p>git checkout -b test &lt;想要跟随的分支&gt;</p>
</li>
</ol>
<h3 id="标签相关"><a href="#标签相关" class="headerlink" title="标签相关"></a>标签相关</h3><p>1、创建标签</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　　git tag tagname 对当前版本建立标签 </span><br><span class="line">　　git tag tagname commit_id 对历史版本建立标签 </span><br><span class="line">　　git tag -a tagname -m “描述…” commit_id 添加说明 </span><br><span class="line">　　git tag 查看所有标签 </span><br><span class="line">　　git show tagname 查看某个标签具体信息</span><br></pre></td></tr></table></figure>

<p>2、删除标签</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git tag -d tagname 删除本地标签</span><br></pre></td></tr></table></figure>

<p>3、推送标签</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　git push origin tagname 推送本地的某个标签到远程 </span><br><span class="line">　　git push origin –tags 一次性推送所有分支</span><br></pre></td></tr></table></figure>

<p>4、删除远程标签</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">　　git tag -d tagname 先删除本地 </span><br><span class="line">　　git push origin :refs/tags/tagname 从远程删除</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">命令git tag -a &lt;tagname&gt; -m &quot;XXX...&quot; 可以指定标签信息。</span><br><span class="line"></span><br><span class="line">命令git tag -a v0.1.0 -m &quot;release 0.1.0 version&quot; 创建附注标签。</span><br><span class="line"></span><br><span class="line">命令git checkout [tagname] 切换标签。</span><br></pre></td></tr></table></figure>

<h2 id="回滚操作"><a href="#回滚操作" class="headerlink" title="回滚操作"></a>回滚操作</h2><p> from ： <a href="https://www.cnblogs.com/songgj/p/8965580.html">https://www.cnblogs.com/songgj/p/8965580.html</a></p>
<p>git的撤销与回滚在平时使用中还是比较多的，比如说我们想将某个修改后的文件撤销到上一个版本，或者是想撤销某次多余的提交，都要用到git的撤销和回滚操作。撤销分两种情况，一个是commit之前，一个是commit之后，下面具体看下这两种情况。</p>
<p> <strong>一.git commit之前</strong></p>
<p>​    未添加到暂存区的撤销(没有git add)</p>
<p>​    添加进暂存区的撤销(git add后)</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch test_git</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:     没有添加到暂存区</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git checkout -- &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">  　　　modified: new_src/app/Http/Controllers/Frontend/KyHome/KyHomeUnitTrait.php</span><br><span class="line">　　　　modified: new_src/app/Http/Controllers/Frontend/KyHome/KyHomeWordFilterTrait.php</span><br></pre></td></tr></table></figure>

<p>可以通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -- filename来撤销修改</span><br><span class="line">git checkout -- new_src/app/Http/Controllers/Frontend/KyHome/KyHomeWordFilterTrait.php</span><br></pre></td></tr></table></figure>

<p>再次查看文件状态发现选择的文件已经成功被撤销了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch test_git</span><br><span class="line">Changes not staged for commit:  </span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line">　　　　modified: new_src/app/Http/Controllers/Frontend/KyHome/KyHomeUnitTrait.php</span><br></pre></td></tr></table></figure>

<p>如果想将多个文件一次性撤销可以用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout -- .</span><br></pre></td></tr></table></figure>

<p>上面是 未添加到暂存区的撤销</p>
<p>下面是添加到暂存区的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch test_git</span><br><span class="line">Changes not staged for commit:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span><br><span class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span><br><span class="line"></span><br><span class="line">        modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br><span class="line">        modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeComment.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git add -A</span><br><span class="line">$ git status</span><br><span class="line">On branch test_git</span><br><span class="line">Changes to be committed:    已经添加暂存区了</span><br><span class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</span><br><span class="line"></span><br><span class="line">        modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br><span class="line">        modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeComment.php</span><br></pre></td></tr></table></figure>

<p>从暂存区撤销</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git reset HEAD new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M       new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br></pre></td></tr></table></figure>

<p>如果想一次性将所有暂存区文件撤销回来，还是上面的命令，不过不用加文件路径。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git reset HEAD</span><br><span class="line">Unstaged changes after reset:</span><br><span class="line"></span><br><span class="line">M       new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br><span class="line">M       new_src/app/Http/Controllers/Frontend/KyHome/KyHomeComment.php</span><br></pre></td></tr></table></figure>

<p><strong>二.git commit之后</strong></p>
<p>如果当commit提交后想撤销的话，这就需要revert命令。git revert 命令是撤销某次操作，而在此次操作之前和之后的提交记录都会保留。</p>
<p>先修改了几个文件然后commit 再用git log查看提交记录。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">commit 2842c8065322085c31fb7b8207b6296047c4ea3</span><br><span class="line">Author: songguojun &lt;songgj@kingnet.sh&gt;</span><br><span class="line">Date:   Sat Apr 28 11:21:30 2018 +0800</span><br><span class="line"></span><br><span class="line">    add content </span><br></pre></td></tr></table></figure>

<p>然后使用revert  后面跟上git提交的commitid</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git  revert 2842c8065322085c31fb7b8207b6296047c4ea3</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Revert &quot;add content&quot;</span><br><span class="line"></span><br><span class="line">This reverts commit 2842c8065ffe2085c31fb7b8207b6296047c4ea3.</span><br><span class="line"></span><br><span class="line"># Please enter the commit message for your changes. Lines starting</span><br><span class="line"># with &#x27;#&#x27; will be ignored, and an empty message aborts the commit.</span><br><span class="line"># On branch test_git</span><br><span class="line"># Changes to be committed:</span><br><span class="line">#       modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeApp.php</span><br><span class="line">#       modified:   new_src/app/Http/Controllers/Frontend/KyHome/KyHomeComment.php</span><br></pre></td></tr></table></figure>

<p> 然后在推送到远端更新远程仓库代码，修改的文件就撤销回来了。注意的是revert奇数次生效，偶数次又回到之前的修改状态。比如一个文件内容是a，那么修改为ab，revert后文件变成了a，如果在revert后文件又还原成ab了。</p>
<p>还有就是如果想回到之前某个版本，可以用reset命令，可以回退到某次提交，那该提交之后的提交都会回滚，不过这种覆盖是不可逆的，之前的提交记录都没有了。所以平时开发中尽量注意，避免使用reset。</p>
<p>用法:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git  reset --hard  commit_id</span><br></pre></td></tr></table></figure>

<ul>
<li>–hard – 强制将缓存区和工作目录都同步到你指定的提交</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> git  reset --hard fdeb212a5418cc8e31f32d63cf197550297468ec</span><br><span class="line">HEAD is now at fdeb212 增加mysql端口配置</span><br></pre></td></tr></table></figure>

<p>然后在提交到远端覆盖。</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git hooks(husk gitlint..)</title>
    <url>/2021/11/18/git-hooks-husk-gitlint/</url>
    <content><![CDATA[<p>GitHook 工具 —— stylelint , husky , cz-cli , commitlint ,lint-staged</p>
<h2 id="stylelint"><a href="#stylelint" class="headerlink" title="stylelint:"></a>stylelint:</h2><p>自动修复错误、格式化样式代码</p>
<p>安装 <code>stylelint</code>、<code>stylelint-config-standard</code> 两个依赖到我们的项目中</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add stylelint stylelint-config-standard -D</span><br></pre></td></tr></table></figure>

<p>根目录，创建一个 <code>.stylelintrc</code> 配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;extends&quot;: &quot;stylelint-config-standard&quot;,</span><br><span class="line">  &quot;rules&quot;: &#123;</span><br><span class="line">    &quot;indentation&quot;: [</span><br><span class="line">      2,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;baseIndentLevel&quot;: 1</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;declaration-block-semicolon-newline-after&quot;: &quot;always&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Husky"><a href="#Husky" class="headerlink" title="Husky:"></a>Husky:</h2><p>husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commit-msg、pre-push</p>
<p>安装:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add husky-init --dev &amp;&amp; yarn husky-init</span><br></pre></td></tr></table></figure>

<p>or npm:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npx husky-init &amp;&amp; npm install</span><br></pre></td></tr></table></figure>

<h2 id="Commitlint"><a href="#Commitlint" class="headerlink" title="Commitlint:"></a>Commitlint:</h2><p>限制提交 , 不符合的提交会被拒绝</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add @commitlint/config-conventional @commitlint/cli -D</span><br></pre></td></tr></table></figure>

<p>根目录创建  commitlint.config.js 文件，配置commitlint</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  extends: [<span class="string">&#x27;@commitlint/config-conventional&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用husky生成commit-msg文件，验证提交信息</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn husky add .husky/commit-msg <span class="string">&#x27;yarn commitlint --edit &quot;$1&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>or npm:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npx husky add .husky/commit-msg <span class="string">&quot;npx --no-install commitlint --edit <span class="variable">$1</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="lint-staged"><a href="#lint-staged" class="headerlink" title="lint-staged"></a>lint-staged</h2><p>只会对修改的文件进行检查、修复处理</p>
<p>install : </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn add lint-staged -D</span><br></pre></td></tr></table></figure>

<p>根目录，创建一个 <code>.lintstagedrc</code> 配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;  &quot;*.&#123;js,vue&#125;&quot;: [&quot;yarn lint&quot;],  &quot;*.&#123;html,vue,css,scss,sass,less&#125;&quot;: [&quot;stylelint --fix&quot;]&#125;</span><br></pre></td></tr></table></figure>

<p>or npm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;  &quot;*.&#123;js,vue&#125;&quot;: [&quot;npm run lint&quot;],  &quot;*.&#123;html,vue,css,scss,sass,less&#125;&quot;: [&quot;stylelint --fix&quot;]&#125;</span><br></pre></td></tr></table></figure>

<p>增加 pre-commit 勾子</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn husky add .husky/pre-commit <span class="string">&#x27;yarn lint-staged --allow-empty &quot;$1&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="Commitizen-是一个帮助我们编写规范-commit-message"><a href="#Commitizen-是一个帮助我们编写规范-commit-message" class="headerlink" title="Commitizen: 是一个帮助我们编写规范 commit message"></a>Commitizen: 是一个帮助我们编写规范 commit message</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn  add commitizen -D</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">commitizen init cz-conventional-changelog --yarn --dev --exact</span><br></pre></td></tr></table></figure>

<p>Or npm</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install commitizen -Dnpx commitizen init cz-conventional-changelog --save-dev --save-exact</span><br></pre></td></tr></table></figure>

<p>以后提交使用:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yarn cz or npx cz</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Type</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>feat</td>
<td>新增特性 (feature)</td>
</tr>
<tr>
<td>fix</td>
<td>修复 Bug(bug fix)</td>
</tr>
<tr>
<td>docs</td>
<td>修改文档 (documentation)</td>
</tr>
<tr>
<td>style</td>
<td>代码格式修改(white-space, formatting, missing semi colons, etc)</td>
</tr>
<tr>
<td>refactor</td>
<td>代码重构(refactor)</td>
</tr>
<tr>
<td>perf</td>
<td>改善性能(A code change that improves performance)</td>
</tr>
<tr>
<td>test</td>
<td>测试(when adding missing tests)</td>
</tr>
<tr>
<td>build</td>
<td>变更项目构建或外部依赖（例如 scopes: webpack、gulp、npm 等）</td>
</tr>
<tr>
<td>ci</td>
<td>更改持续集成软件的配置文件和 package 中的 scripts 命令，例如 scopes: Travis, Circle 等</td>
</tr>
<tr>
<td>chore</td>
<td>变更构建流程或辅助工具(比如更改测试环境)</td>
</tr>
<tr>
<td>revert</td>
<td>代码回退</td>
</tr>
</tbody></table>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h2><h3 id="当我们在-Windows-的-Git-Bash-上使用-Yarn，git-hooks-会失败（stdin-is-not-a-tty）。"><a href="#当我们在-Windows-的-Git-Bash-上使用-Yarn，git-hooks-会失败（stdin-is-not-a-tty）。" class="headerlink" title="当我们在 Windows 的 Git Bash 上使用 Yarn，git hooks 会失败（stdin is not a tty）。"></a>当我们在 Windows 的 <code>Git Bash</code> 上使用 <code>Yarn</code>，git hooks 会失败（<code>stdin is not a tty</code>）。</h3><p>解决方案：</p>
<p>1.在 <code>.husky</code> 目录下创建一个 <code>common.sh</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh command_exists () &#123;  command -v &quot;$1&quot; &gt;/dev/null 2&gt;&amp;1&#125; # Windows 10, Git Bash and Yarn workaroundif command_exists winpty &amp;&amp; test -t 1; then  exec &lt; /dev/ttyfi</span><br></pre></td></tr></table></figure>

<p>在对应的勾子文件中，增加一行 <code>. &quot;$(dirname &quot;$0&quot;)/common.sh&quot;</code> 代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;. &quot;$(dirname &quot;$0&quot;)/common.sh&quot; yarn …</span><br></pre></td></tr></table></figure>

<h3 id="CI-持续集成"><a href="#CI-持续集成" class="headerlink" title="CI 持续集成 :"></a>CI 持续集成 :</h3><p> CI 是不需要 git hooks 的问题，就直接将代码合并到测试服的分支上，通过 <code>Jenkins</code> 构建出现了 husky install 失败。</p>
<p>解决方案：<br>使用 <code>is-ci</code>，在 ci 场景不会执行 <code>husky install</code></p>
<p>安装 <code>is-ci</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yarn add is-ci -D</span><br></pre></td></tr></table></figure>

<p>在 <code>.husky</code> 目录下，创建一个 <code>install.js</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const &#123; spawnSync &#125; = require(&#x27;child_process&#x27;)const isCI = require(&#x27;is-ci&#x27;) if (!isCI) &#123;  spawnSync(&#x27;husky&#x27;, [&#x27;install&#x27;], &#123;    stdio: &#x27;inherit&#x27;,    shell: true  &#125;)&#125;</span><br></pre></td></tr></table></figure>

<p>修改 <code>package.json</code> 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;script&quot;: &#123;   &quot;postinstall&quot;: &quot;node .husky/install.js&quot;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h2><h3 id="1-1-集成editorconfig配置"><a href="#1-1-集成editorconfig配置" class="headerlink" title="1.1. 集成editorconfig配置"></a>1.1. 集成editorconfig配置</h3><p>EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。</p>
<p>.editorconfig</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># http://editorconfig.orgroot = true[*] # 表示所有文件适用charset = utf-8 # 设置文件字符集为 utf-8indent_style = space # 缩进风格（tab | space）indent_size = 2 # 缩进大小end_of_line = lf # 控制换行类型(lf | cr | crlf)trim_trailing_whitespace = true # 去除行首的任意空白字符insert_final_newline = true # 始终在文件末尾插入一个新行[*.md] # 表示仅 md 文件适用以下规则max_line_length = offtrim_trailing_whitespace = false</span></span><br></pre></td></tr></table></figure>

<p>VSCode需要安装一个插件：EditorConfig for VS Code</p>
<p>2.配置.prettierrc文件：</p>
<ul>
<li>useTabs：使用tab缩进还是空格缩进，选择false；</li>
<li>tabWidth：tab是空格的情况下，是几个空格，选择2个；</li>
<li>printWidth：当行字符的长度，推荐80，也有人喜欢100或者120；</li>
<li>singleQuote：使用单引号还是双引号，选择true，使用单引号；</li>
<li>trailingComma：在多行输入的尾逗号是否添加，设置为 <code>none</code>；</li>
<li>semi：语句末尾是否要加分号，默认值true，选择false表示不加；</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;  <span class="attr">&quot;useTabs&quot;</span>: <span class="literal">false</span>,  <span class="attr">&quot;tabWidth&quot;</span>: <span class="number">2</span>,  <span class="attr">&quot;printWidth&quot;</span>: <span class="number">80</span>,  <span class="attr">&quot;singleQuote&quot;</span>: <span class="literal">true</span>,  <span class="attr">&quot;trailingComma&quot;</span>: <span class="string">&quot;none&quot;</span>,  <span class="attr">&quot;semi&quot;</span>: <span class="literal">false</span>&#125;</span><br></pre></td></tr></table></figure>

<p>3.创建.prettierignore忽略文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/dist/*.local.output.js/node_modules/****/*.svg**/*.sh/public/*</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>grid 布局和flex布局的 选择问题.</title>
    <url>/2021/11/22/grid-%E5%B8%83%E5%B1%80%E5%92%8Cflex%E5%B8%83%E5%B1%80%E7%9A%84-%E9%80%89%E6%8B%A9%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>grid 布局和 flex 布局 有各自的应用场景</p>
<ol>
<li>要考虑是一纬布局还是二维布局(横向排列和竖向排列都要考虑)<ul>
<li>一维布局用felx</li>
<li>而维用 grid</li>
</ul>
</li>
<li>是从内容出发还是从布局出发<ul>
<li>从内容出发: 内容不确定,希望有规律的分布在容器中</li>
<li>从布局出发: 整体架构已经确定, 填元素即可</li>
</ul>
</li>
</ol>
<p>总结: 整体青睐grid,局部用flex.</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/11/17/hello-world/</url>
    <content><![CDATA[<p>hello world.</p>
]]></content>
      <categories>
        <category>nothing</category>
      </categories>
      <tags>
        <tag>nothing</tag>
      </tags>
  </entry>
  <entry>
    <title>interview react</title>
    <url>/2021/11/18/interview-react/</url>
    <content><![CDATA[<ol>
<li>setState 异步和同步</li>
<li>setState 其实无所谓异步同步,如果命中batchingUpdates 就是同步,否则是异步</li>
<li>那些能命中batchUpdate机<ol>
<li>生命周期 和它调用的函数</li>
<li>React 中注册的事件 和它调用的函数</li>
<li>React可以管理的入口</li>
</ol>
</li>
<li>react hooks 解决了什么问题,为什么会有这个<ol>
<li>class 逻辑分散,存在性能浪费</li>
<li>class 复杂组件不易拆解,不易测试</li>
<li>完善函数组件的能力,符合react 函数式编程的思想</li>
<li>组件逻辑复用时,hooks 逻辑更清晰</li>
</ol>
</li>
<li>hooks 如何模拟生命周期<ol>
<li>useEffect</li>
</ol>
</li>
<li>如何自定义<ol>
<li>uesXxx</li>
</ol>
</li>
<li>hooks 性能优化<ol>
<li>useMemo</li>
<li>useCallback</li>
</ol>
</li>
<li>hooks 遇到那些坑<ol>
<li>只能用于顶层代码,不能有循环之类的</li>
<li>useState 只初始化一次</li>
<li>useEffect 内部不能修改state</li>
<li>useEffect 依赖引用类型会出现死循环</li>
</ol>
</li>
<li>hooks 比 hoc render props 优点在哪里<ol>
<li>符合逻辑</li>
<li>变量作用域明确</li>
<li>不会产生组件嵌套</li>
</ol>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>react</category>
        <category>interview</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>interview vue3</title>
    <url>/2021/11/18/interview-vue3/</url>
    <content><![CDATA[<ol>
<li><p>Vue3 比 vue2 有什么优势</p>
</li>
<li><p>描述vue3生命周期</p>
</li>
<li><p>如何看待composition API 和 Options API</p>
</li>
<li><p>如何理解 ref toRef toRefs</p>
</li>
<li><p>Vue3 升级哪些重要功能</p>
<ol>
<li><p>createApp</p>
<ol>
<li>use 等原来需要用Vue来调用,现在使用app实例</li>
</ol>
</li>
<li><p>emits 属性</p>
</li>
<li><p>生命周期</p>
</li>
<li><p>多事件</p>
<ol>
<li>可以给事件绑定多个会掉,用逗号隔开</li>
</ol>
</li>
<li><p>fragment</p>
<ol>
<li>template 不再 需要包裹单一父节点</li>
</ol>
</li>
<li><p>移除.sync</p>
</li>
<li><p>移除异步组件的写法</p>
<ol>
<li>Vue2 直接通过函数返回import(‘’componentPath.vue)</li>
<li>Vue3 需要使用defineAsyncComponent 来包裹vue2 的写法</li>
</ol>
</li>
<li><p>基础filter</p>
</li>
<li><p>Teleport</p>
</li>
<li><p>Suspense</p>
</li>
<li><p>Composition API</p>
<ol>
<li>reactive ref相关函数 readonly watch watchEffect setup 生命周期钩子</li>
</ol>
</li>
</ol>
</li>
<li><p>Composition API 如何实现代码逻辑复用</p>
</li>
<li><p>Vue3 如何实现响应式</p>
</li>
<li><p>watch watchEffect 区别是什么</p>
<ol>
<li>watch 需要指定要监听的数据<ol>
<li>默认初始化不会执行 </li>
</ol>
</li>
<li>watchEffect 会自动去收集监听用到的值<ol>
<li>默认初始化时会执行</li>
</ol>
</li>
</ol>
</li>
<li><p>setup 中如何获取组件实例</p>
</li>
<li><p>Vue3 为什么比vue2 快</p>
<ol>
<li>proxy响应式<ol>
<li>不必递归到底,用到才回去生成响应式</li>
</ol>
</li>
<li>patchFlag<ol>
<li>模版编译时,动态节点做标记</li>
<li>标记,分为不同的类型,如 TEXT PROPS</li>
<li>diff 算法时, 可以区分静态节点,以及不同类型的动态节点</li>
</ol>
</li>
<li>hoistStatic<ol>
<li>将静态节点的定义,提升到父作用域,缓存起来</li>
<li>多个相邻的静态节点,会被合并起来</li>
<li>典型的拿空间换时间的优化策略</li>
</ol>
</li>
<li>cacheHandler<ol>
<li>缓存事件处理函数</li>
</ol>
</li>
<li>SSR 优化<ol>
<li>静态节点直接输出,绕过了vdom</li>
</ol>
</li>
<li>tree-shaking<ol>
<li>编译时,会根据不同的情况,引入不同API, 需要什么就引入什么</li>
</ol>
</li>
</ol>
</li>
<li><p>vite 是什么</p>
<ol>
<li>一个前端打包工具, vue 作者发起的项目</li>
<li>优势: 开发环境无需打包,<strong>启动快</strong><ol>
<li><strong>开发环境</strong>使用 ES Module (ES6 支持原生的模块化),无需打包 – 所以非常快</li>
<li>生产环境用 rollup ,并不会快很多</li>
</ol>
</li>
</ol>
</li>
<li><p>composition API 和 React Hooks 的区别</p>
<ol>
<li>composition API<ol>
<li>setup 只会被调用一次(算beforeCreate、created合成的效果)</li>
<li>无需 useMemo uesCallback 来优化 setup只会执行一次</li>
<li>无需考虑调用顺序</li>
<li>reactive+ref 比较难以理解</li>
</ol>
</li>
<li>React Hooks <ol>
<li>Hooks 默认会多次调用,需要手动指定依赖项</li>
<li>需要手动将变量,函数用 useMemo uesCallback 包裹来优化</li>
<li>需要报错hooks的顺序一致</li>
<li>useState 很容易理解</li>
</ol>
</li>
</ol>
</li>
<li><p>为什么需要ref</p>
<ol>
<li>返回值类型,会丢失响应式</li>
<li>如在setup computed 合成函数中,都有肯返回值类型</li>
<li>vue 如果不定义ref,用户将自己造一个,反而混乱</li>
</ol>
</li>
<li><p>为什么需要xxxRef.value</p>
<ol>
<li><p>ref是一个对象(对象可以保持响应式-因为是引用拷贝) , value存储值</p>
</li>
<li><p>通过.value属性的get和set实现响应式</p>
<p>注意: 用于模版、reactive时,不需要.value vue框架会自动取帮你取 ; 只有自己在操作时才需要</p>
</li>
</ol>
</li>
<li><p>为什么要toRef toRefs</p>
<ol>
<li>初衷: 不丢失响应式的前提下,将变量进行分解/扩散</li>
<li>注意: 不是在创造响应式,而是在延续响应式</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>interview</category>
        <category>vue3</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>interview</tag>
        <tag>vue3</tag>
      </tags>
  </entry>
  <entry>
    <title>interview webpack</title>
    <url>/2021/11/18/interview-webpack/</url>
    <content><![CDATA[<ol>
<li>前端代码为何要进行构建和打包</li>
<li>module chunk bundle 分别是什么意思,有何区别<ol>
<li>module 各个源码文件,webpack中一切皆模块</li>
<li>chunk 多模块合并成的,如 entry。<code>impor()</code> splitChunk</li>
<li>bundle 最终的输出文件,可以有多个</li>
</ol>
</li>
<li>loader 和 plugin 的区别</li>
<li>webpack 如何实现懒加载</li>
<li>webpack 常见性能优化<ol>
<li>构建速度<ol>
<li>优化babel-loader : 开启缓存,添加include或exclude 明确范围</li>
<li>ignorePlugin</li>
<li>noParse</li>
<li>happyPack</li>
<li>prallelUglifyPlugin</li>
<li>自动刷新 - 热更新-自动刷新升级版</li>
<li>dllPlugin</li>
</ol>
</li>
</ol>
</li>
<li>babel-runtime  和 babel-polyfill 的区别<ul>
<li>runtime 不会污染全局环境<br>   - babel-polyfill 最新webpack中使用core.js 替代-还有generator.js</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>interview</category>
        <category>webpack</category>
      </categories>
      <tags>
        <tag>interview</tag>
        <tag>webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>iterm2 config</title>
    <url>/2021/11/17/iterm2-config/</url>
    <content><![CDATA[<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;Ansi 5 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.3137255&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.4823529&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.4588235&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Working Directory&quot;</span> : <span class="string">&quot;\/Users\/macos&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Prompt Before Closing 2&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Selected Text Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.417633056640625</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Rows&quot;</span> : <span class="number">20</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 11 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.9137255&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.3098039&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.9882353&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Use Italic Font&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Foreground Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.073486328125</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Right Option Key Sends&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Show Status Bar&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Character Encoding&quot;</span> : <span class="number">4</span>,</span><br><span class="line">  <span class="attr">&quot;Selection Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.10443115234375</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Mouse Reporting&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Boost&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 4 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.3960784&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.6431373&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.2039216&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Non-ASCII Anti Aliased&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Sync Title&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Disable Window Resizing&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Description&quot;</span> : <span class="string">&quot;Default&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Close Sessions On End&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Jobs to Ignore&quot;</span> : [</span><br><span class="line">    <span class="string">&quot;rlogin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssh&quot;</span>,</span><br><span class="line">    <span class="string">&quot;slogin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telnet&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;Scrollback Lines&quot;</span> : <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">&quot;Draw Powerline Glyphs&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Status Bar Layout&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;components&quot;</span> : [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;class&quot;</span> : <span class="string">&quot;iTermStatusBarJobComponent&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;configuration&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;knobs&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;maxwidth&quot;</span> : <span class="number">1.7976931348623157e+308</span>,</span><br><span class="line">            <span class="attr">&quot;base: priority&quot;</span> : <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;minwidth&quot;</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;base: compression resistance&quot;</span> : <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;shared text color&quot;</span> : &#123;</span><br><span class="line">              <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.90000000000000002</span>,</span><br><span class="line">              <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.63</span>,</span><br><span class="line">              <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">              <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.63</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;layout advanced configuration dictionary value&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;algorithm&quot;</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;remove empty components&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;auto-rainbow style&quot;</span> : <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;class&quot;</span> : <span class="string">&quot;iTermStatusBarClockComponent&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;configuration&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;knobs&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;base: priority&quot;</span> : <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;base: compression resistance&quot;</span> : <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;shared text color&quot;</span> : &#123;</span><br><span class="line">              <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.63</span>,</span><br><span class="line">              <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.82710000000000006</span>,</span><br><span class="line">              <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">              <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.90000000000000002</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">&quot;format&quot;</span> : <span class="string">&quot;M\/dd h:mm&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;layout advanced configuration dictionary value&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;algorithm&quot;</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;remove empty components&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;auto-rainbow style&quot;</span> : <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;class&quot;</span> : <span class="string">&quot;iTermStatusBarUsernameComponent&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;configuration&quot;</span> : &#123;</span><br><span class="line">          <span class="attr">&quot;knobs&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;path&quot;</span> : <span class="string">&quot;username&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;base: priority&quot;</span> : <span class="number">5</span>,</span><br><span class="line">            <span class="attr">&quot;base: compression resistance&quot;</span> : <span class="number">1</span>,</span><br><span class="line">            <span class="attr">&quot;shared text color&quot;</span> : &#123;</span><br><span class="line">              <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.90000000000000002</span>,</span><br><span class="line">              <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.77580000000000005</span>,</span><br><span class="line">              <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">              <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.63</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;layout advanced configuration dictionary value&quot;</span> : &#123;</span><br><span class="line">            <span class="attr">&quot;algorithm&quot;</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="attr">&quot;remove empty components&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">&quot;auto-rainbow style&quot;</span> : <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;advanced configuration&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;remove empty components&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">&quot;font&quot;</span> : <span class="string">&quot;.AppleSystemUIFont 12&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;algorithm&quot;</span> : <span class="number">0</span>,</span><br><span class="line">      <span class="attr">&quot;auto-rainbow style&quot;</span> : <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Brighten Bold Text&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Flashing Bell&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Guide Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">0.25</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.7543567672616831</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;BM Growl&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 3 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.627451&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.7686275&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Icon&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Use Non-ASCII Font&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Link Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.73423302173614502</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.35916060209274292</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Shortcut&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Background Image Location&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Bold Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Use Cursor Guide&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Unlimited Scrollback&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Custom Command&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Title Components&quot;</span> : <span class="number">512</span>,</span><br><span class="line">  <span class="attr">&quot;Keyboard Map&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;0xf700-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x37-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x32-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x00&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf709-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[17;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70c-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[20;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf729-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2H&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf72b-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5F&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf705-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2Q&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b 0x1b 0x5b 0x42&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x38-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x7f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x33-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70d-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[21;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf729-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5H&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf706-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2R&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x34-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b 0x1b 0x5b 0x41&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2d-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70e-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[23;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b 0x1b 0x5b 0x43&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf707-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2S&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70a-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[18;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x35-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1d&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70f-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[24;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b 0x1b 0x5b 0x44&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf72b-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2F&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x36-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1e&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf708-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[15;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70b-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[19;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf704-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2P&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 14 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.8862745&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.8862745&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.2039216&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 2 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.6039215999999999&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.02352941&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.3058824&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Send Code When Idle&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;ASCII Anti Aliased&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Tags&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;Ansi 9 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.1607843&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.1607843&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.9372549&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Use Bold Font&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Silence Bell&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 12 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.6235294&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.8117647&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.4470588&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Window Type&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Use Bright Bold&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Has Hotkey&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Text Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Default Bookmark&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 1 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.8&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Name&quot;</span> : <span class="string">&quot;myITermSetting&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Blinking Cursor&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Guid&quot;</span> : <span class="string">&quot;AC71A9EF-1B66-4EFB-9995-8912DB209ADD&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 8 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.3411765&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.3254902&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.3333333&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 10 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.8862745&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.2039216&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.5411764999999999&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Idle Code&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Badge Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">0.5</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.1491314172744751</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ambiguous Double Width&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Blur Radius&quot;</span> : <span class="number">2.5408203125000068</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Type&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 0 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Blur&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Normal Font&quot;</span> : <span class="string">&quot;DejaVuSansMonoPowerline-Bold 15&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Vertical Spacing&quot;</span> : <span class="number">1.2</span>,</span><br><span class="line">  <span class="attr">&quot;Use Underline Color&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 7 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.8431373&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.8117647&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.827451&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Command&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Terminal Type&quot;</span> : <span class="string">&quot;xterm-256color&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Horizontal Spacing&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Option Key Sends&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Only The Default BG Color Uses Transparency&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Blink Allowed&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Minimum Contrast&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 15 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.9333333&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.9254902&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.9333333&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Unicode Version&quot;</span> : <span class="number">9</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 6 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.5960785&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.6039215999999999&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.02352941&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Transparency&quot;</span> : <span class="number">0.29841308593749999</span>,</span><br><span class="line">  <span class="attr">&quot;Background Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Screen&quot;</span> : <span class="number">-1</span>,</span><br><span class="line">  <span class="attr">&quot;Initial Use Transparency&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Bound Hosts&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;Non Ascii Font&quot;</span> : <span class="string">&quot;Monaco 14&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 13 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="string">&quot;0.4980392&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="string">&quot;0.6588235&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="string">&quot;0.6784314&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Use Tab Color&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Columns&quot;</span> : <span class="number">80</span>,</span><br><span class="line">  <span class="attr">&quot;Unicode Normalization&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Visual Bell&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Show Timestamps&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Custom Directory&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ASCII Ligatures&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Thin Strokes&quot;</span> : <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>js 读取本地图片-作为上传图片的预览</title>
    <url>/2021/11/18/js-%E8%AF%BB%E5%8F%96%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87-%E4%BD%9C%E4%B8%BA%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%9A%84%E9%A2%84%E8%A7%88/</url>
    <content><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        file: <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;fileDemo&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;avatar&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;resImg&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 监听点击事件</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//阻止默认提交行为</span></span></span><br><span class="line"><span class="javascript">                e.preventDefault()</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 新建读取对象</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 获取选择的文件</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> resultFile = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fileDemo&quot;</span>).files;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//打印查看一下上传的文件</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(resultFile);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//以dataUrl的方式读取;这里还可以以其他方式读取,eg:文本读取...</span></span></span><br><span class="line"><span class="javascript">                reader.readAsDataURL(resultFile[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 当文件读取完毕时</span></span></span><br><span class="line"><span class="javascript">                reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> urlData = <span class="built_in">this</span>.result;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.getElementById(<span class="string">&quot;resImg&quot;</span>).innerHTML += <span class="string">&quot;&lt;img width=&#x27;100px&#x27; height=&#x27;100px&#x27; src=&#x27;&quot;</span> + urlData + <span class="string">&quot;&#x27; alt=&#x27;&quot;</span> + resultFile.name + <span class="string">&quot;&#x27; /&gt;&quot;</span>;</span></span><br><span class="line"><span class="javascript">                &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>js将毫秒转换为年月日时分秒(两种输出格式)</title>
    <url>/2021/11/18/js%E5%B0%86%E6%AF%AB%E7%A7%92%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%B9%B4%E6%9C%88%E6%97%A5%E6%97%B6%E5%88%86%E7%A7%92-%E4%B8%A4%E7%A7%8D%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> sec=<span class="number">1588919434</span>;</span><br><span class="line"><span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>(sec*<span class="number">1000</span>);</span><br><span class="line"><span class="comment">//style one</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getFullYear()+<span class="string">&quot;年&quot;</span>+<span class="string">&quot;:&quot;</span>+(time.getMonth()+<span class="number">1</span>)+<span class="string">&quot;月&quot;</span>+<span class="string">&quot;:&quot;</span>+time.getDate()+<span class="string">&quot;日&quot;</span>+<span class="string">&quot;:&quot;</span>+time.getHours()+<span class="string">&quot;点&quot;</span>+<span class="string">&quot;:&quot;</span>+time.getMinutes()+<span class="string">&quot;分&quot;</span>+<span class="string">&quot;:&quot;</span>+</span><br><span class="line">time.getSeconds()+<span class="string">&quot;秒&quot;</span>);</span><br><span class="line"><span class="comment">//style two</span></span><br><span class="line"><span class="built_in">console</span>.log(time.getFullYear()+<span class="string">&quot;年&quot;</span>+<span class="string">&quot;-&quot;</span>+(time.getMonth()+<span class="number">1</span>)+<span class="string">&quot;月&quot;</span>+<span class="string">&quot;-&quot;</span>+time.getDate()+<span class="string">&quot;日&quot;</span>+<span class="string">&quot;-&quot;</span>+time.getHours()+<span class="string">&quot;点&quot;</span>+<span class="string">&quot;-&quot;</span>+time.getMinutes()+<span class="string">&quot;分&quot;</span>+<span class="string">&quot;-&quot;</span>+</span><br><span class="line">time.getSeconds()+<span class="string">&quot;秒&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>text-shadow keyframes 实现文字抖动</title>
    <url>/2021/11/18/text-shadow-keyframes-%E5%AE%9E%E7%8E%B0%E6%96%87%E5%AD%97%E6%8A%96%E5%8A%A8/</url>
    <content><![CDATA[<pre><code>    &lt;style&gt;
        body &#123;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: #000;
        &#125;
        h2 &#123;
            color: yellow;
            font-family: sans-serif;
            font-size: 4em;
            animation: animate 1s linear infinite;
        &#125;

        @keyframes animate &#123;
            0%,
            100% &#123;
                text-shadow: -1.5px -1.5px 0 #0ff, 1.5px 1.5px 0 #f00;
            &#125;
            25% &#123;
                text-shadow: 1.5px 1.5px 0 #0ff, -1.5px -1.5px 0 #f00;
            &#125;
            50% &#123;
                text-shadow: 1.5px -1.5px 0 #0ff, 1.5px -1.5px 0 #f00;
            &#125;
            75% &#123;
                text-shadow: -1.5px 1.5px 0 #0ff, -1.5px 1.5px 0 #f00;
            &#125;
        &#125;
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h2&gt;jiujueismmp&lt;/h2&gt;
&lt;/body&gt;
</code></pre>
]]></content>
      <categories>
        <category>css trick</category>
      </categories>
      <tags>
        <tag>css trick</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu环境下实现 多线程的socket(tcp) 通信</title>
    <url>/2021/11/18/ubuntu%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%9E%E7%8E%B0-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84socket-tcp-%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<h2 id="改改就是个小型局域网聊天"><a href="#改改就是个小型局域网聊天" class="headerlink" title="改改就是个小型局域网聊天"></a>改改就是个小型局域网聊天</h2><blockquote>
<p>服务器端：</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// File Name: process_server.c</span></span><br><span class="line"><span class="comment">// Author: jiujue</span></span><br><span class="line"><span class="comment">// Created Time: 2019年03月10日 星期日 20时29分18秒</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sock_info</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> m_fd;</span><br><span class="line">    <span class="keyword">pthread_t</span> m_pthid;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">m_addr</span>;</span></span><br><span class="line"></span><br><span class="line">&#125;Sock_info;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">works</span><span class="params">(<span class="keyword">void</span>* arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Sock_info *c_info = (Sock_info*)arg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//obtain client info</span></span><br><span class="line">    <span class="keyword">int</span> client_port = ntohs(c_info-&gt;m_addr.sin_port);</span><br><span class="line">    <span class="keyword">char</span> client_Ip[<span class="number">64</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">socklen_t</span> buf_len = <span class="keyword">sizeof</span>(client_Ip);</span><br><span class="line"></span><br><span class="line">    inet_ntop(AF_INET, (<span class="keyword">void</span>*)&amp;c_info-&gt;m_addr.sin_addr.s_addr,client_Ip,buf_len);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t\t\t\t Ip %s, port %d,connect successful\n&quot;</span>,client_Ip,client_port);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">1024</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> read_len = read(c_info-&gt;m_fd, buf, <span class="keyword">sizeof</span>(buf));</span><br><span class="line">        <span class="keyword">if</span>(read_len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            buf[read_len+<span class="number">1</span>]=<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-&gt;-&gt; Obtain if of ,Ip %s, port %d, send info: %s\n&quot;</span>,client_Ip,client_port,buf);</span><br><span class="line">            write(c_info-&gt;m_fd,buf,<span class="built_in">strlen</span>(buf));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">0</span> == read_len)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t\t\t Ip %s, port %d, disconnect\n&quot;</span>,client_Ip,client_port);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">-1</span> == read_len)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;read error&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;eg: ./app IP Port\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">short</span> port = atoi(argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> lfd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span> == lfd)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;socket error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv</span>;</span></span><br><span class="line">    serv.sin_port = htons(port);</span><br><span class="line">    serv.sin_family = AF_INET;</span><br><span class="line">    inet_pton(AF_INET, argv[<span class="number">1</span>], &amp;serv.sin_addr.s_addr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = bind(lfd, (struct sockaddr *)&amp;serv, <span class="keyword">sizeof</span>(serv));</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span> == res)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;bind error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res = listen(lfd, <span class="number">128</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span> == res)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;listen error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\a Wait accepting...\n&quot;</span>);</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client_add</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">socklen_t</span> len = <span class="keyword">sizeof</span>(client_add);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> cfd = accept(lfd,(struct sockaddr*)&amp;client_add, &amp;len); </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(<span class="number">-1</span> == cfd &amp;&amp; cfd == EINTR)</span><br><span class="line">        &#123;</span><br><span class="line">            cfd = accept(lfd,(struct sockaddr*)&amp;client_add, &amp;len); </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// supply son pthread info</span></span><br><span class="line">        Sock_info* s_info =(Sock_info*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Sock_info));</span><br><span class="line"></span><br><span class="line">        s_info-&gt;m_fd = cfd;</span><br><span class="line">        s_info-&gt;m_addr = client_add;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res = pthread_create(&amp;s_info-&gt;m_pthid, <span class="literal">NULL</span>, works, (<span class="keyword">void</span>*)s_info);</span><br><span class="line">        <span class="keyword">if</span>(res == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;pthread_creat error&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        pthread_detach(s_info-&gt;m_pthid);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    close(lfd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>客户端：</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// File Name: socket_client.c</span></span><br><span class="line"><span class="comment">// Author: jiujue</span></span><br><span class="line"><span class="comment">// Created Time: 2019年03月09日 星期六 13时00分05秒</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(argc &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;eg: ./app Ip Port\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> port = atoi(argv[<span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> fd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span> == fd)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;socket error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serv</span>;</span></span><br><span class="line"></span><br><span class="line">    serv.sin_port =  htons(port);</span><br><span class="line">    serv.sin_family = AF_INET;</span><br><span class="line">    inet_pton(AF_INET, argv[<span class="number">1</span>], &amp;serv.sin_addr.s_addr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">socklen_t</span> len = <span class="keyword">sizeof</span>(serv);</span><br><span class="line">    <span class="keyword">int</span> res = connect(fd,(struct sockaddr *) &amp;serv, len);</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span> == res)</span><br><span class="line">    &#123;</span><br><span class="line">        perror(<span class="string">&quot;connect error&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Connectt server successful!!\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Please input string\n&gt;&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">char</span> buf[<span class="number">1024</span>]; </span><br><span class="line">        fgets(buf,<span class="keyword">sizeof</span>(buf),<span class="built_in">stdin</span>);</span><br><span class="line">        write(fd, buf, <span class="built_in">strlen</span>(buf));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;send buf: %s\n&quot;</span>,buf);</span><br><span class="line">        len = read(fd,buf,(buf));</span><br><span class="line">        <span class="keyword">if</span>(len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Recv buf: %s\n&quot;</span>,buf);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(len == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Serer disconnect \n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">-1</span> == len)</span><br><span class="line">        &#123;</span><br><span class="line">            perror(<span class="string">&quot;Read errror&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;I no now\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    close(fd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Done"><a href="#Done" class="headerlink" title="Done."></a>Done.</h2>]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>vimrc vim 配置文件示例(旧版)</title>
    <url>/2021/11/18/vimrc-vim-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%A4%BA%E4%BE%8B-%E6%97%A7%E7%89%88/</url>
    <content><![CDATA[<p><strong>在以下行数替换你自己的昵称和邮箱即可</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">247 </span><br><span class="line">248</span><br><span class="line">285</span><br><span class="line">290</span><br><span class="line">322</span><br><span class="line">327</span><br></pre></td></tr></table></figure>
<p><strong>也可使用全文替换：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:s/jiujue/你的昵称/g</span><br><span class="line">:s/jiujueismmp@qq.com/你的邮箱/g</span><br></pre></td></tr></table></figure>



<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot; All system-wide defaults are set in <span class="variable">$VIMRUNTIME</span>/debian.vim and sourced by</span></span><br><span class="line"><span class="string">&quot;</span> the call to :runtime you can find below.  If you wish to change any of those</span><br><span class="line"><span class="string">&quot; settings, you should do it in this file (/etc/vim/vimrc), since debian.vim</span></span><br><span class="line"><span class="string">&quot;</span> will be overwritten everytime an upgrade of the vim packages is performed.</span><br><span class="line"><span class="string">&quot; It is recommended to make changes after sourcing debian.vim since it alters</span></span><br><span class="line"><span class="string">&quot;</span> the value of the <span class="string">&#x27;compatible&#x27;</span> option.</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; This line should not be removed as it ensures that various options are</span></span><br><span class="line"><span class="string">&quot;</span> properly <span class="built_in">set</span> to work with the Vim-related packages available <span class="keyword">in</span> Debian.</span><br><span class="line">runtime! debian.vim</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; Vim will load <span class="variable">$VIMRUNTIME</span>/defaults.vim if the user does not have a vimrc.</span></span><br><span class="line"><span class="string">&quot;</span> This happens after /etc/vim/vimrc(.<span class="built_in">local</span>) are loaded, so it will override</span><br><span class="line"><span class="string">&quot; any settings in these files.</span></span><br><span class="line"><span class="string">&quot;</span> If you don<span class="string">&#x27;t want that to happen, uncomment the below line to prevent</span></span><br><span class="line"><span class="string">&quot; defaults.vim from being loaded.</span></span><br><span class="line"><span class="string">&quot; let g:skip_defaults_vim = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Uncomment the next line to make Vim more Vi-compatible</span></span><br><span class="line"><span class="string">&quot; NOTE: debian.vim sets &#x27;</span>nocompatible<span class="string">&#x27;.  Setting &#x27;</span>compatible<span class="string">&#x27; changes numerous</span></span><br><span class="line"><span class="string">&quot; options, so any other options should be set AFTER setting &#x27;</span>compatible<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">&quot;set compatible</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Vim5 and later versions support syntax highlighting. Uncommenting the next</span></span><br><span class="line"><span class="string">&quot; line enables syntax highlighting by default.</span></span><br><span class="line"><span class="string">if has(&quot;syntax&quot;)</span></span><br><span class="line"><span class="string">  syntax on</span></span><br><span class="line"><span class="string">endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; If using a dark background within the editing area and syntax highlighting</span></span><br><span class="line"><span class="string">&quot; turn on this option as well</span></span><br><span class="line"><span class="string">&quot;set background=dark</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot; Uncomment the following to have Vim jump to the last position when</span></span><br><span class="line"><span class="string">&quot; reopening a file</span></span><br><span class="line"><span class="string">&quot;if has(&quot;autocmd&quot;)</span></span><br><span class="line"><span class="string">&quot;  au BufReadPost * if line(&quot;&#x27;</span>\&quot;<span class="string">&quot;) &gt; 1 &amp;&amp; line(&quot;</span><span class="string">&#x27;\&quot;&quot;) &lt;= line(&quot;$&quot;) | exe &quot;normal! g&#x27;</span>\&quot;<span class="string">&quot; | endif</span></span><br><span class="line"><span class="string">&quot;</span>endif</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; Uncomment the following to have Vim load indentation rules and plugins</span></span><br><span class="line"><span class="string">&quot;</span> according to the detected filetype.</span><br><span class="line"><span class="string">&quot;if has(&quot;</span>autocmd<span class="string">&quot;)</span></span><br><span class="line"><span class="string">&quot;</span>  filetype plugin indent on</span><br><span class="line"><span class="string">&quot;endif</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> The following are commented out as they cause vim to behave a lot</span><br><span class="line"><span class="string">&quot; differently from regular Vi. They are highly recommended though.</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> showcmd        <span class="string">&quot; Show (partial) command in status line.</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> showmatch        <span class="string">&quot; Show matching brackets.</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> ignorecase        <span class="string">&quot; Do case insensitive matching</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> smartcase        <span class="string">&quot; Do smart case matching</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> incsearch        <span class="string">&quot; Incremental search</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> autowrite        <span class="string">&quot; Automatically save before commands like :next and :make</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> hidden        <span class="string">&quot; Hide buffers when they are abandoned</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> mouse=a        <span class="string">&quot; Enable mouse usage (all modes)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> Source a global configuration file <span class="keyword">if</span> available</span><br><span class="line"><span class="keyword">if</span> filereadable(<span class="string">&quot;/etc/vim/vimrc.local&quot;</span>)</span><br><span class="line">  <span class="built_in">source</span> /etc/vim/vimrc.local</span><br><span class="line">endif</span><br><span class="line"><span class="string">&quot; append myself custom</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; 一般设定</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; 设定默认解码</span></span><br><span class="line"><span class="string">set fenc=utf-8</span></span><br><span class="line"><span class="string">set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要使用vi的键盘模式，而是vim自己的</span><br><span class="line"><span class="string">&quot;set nocompatible</span></span><br><span class="line"><span class="string">&quot;</span> 设置行号的显示</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="string">&quot; history文件中需要记录的行数</span></span><br><span class="line"><span class="string">set history=100</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line"><span class="built_in">set</span> confirm</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 与windows共享剪贴板</span></span><br><span class="line"><span class="string">set clipboard+=unnamed</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 侦测文件类型</span><br><span class="line">filetype on</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 载入文件类型插件</span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 为特定文件类型载入相关缩进文件</span><br><span class="line">filetype indent on</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 带有如下符号的单词不要被换行分割</span></span><br><span class="line"><span class="string">set iskeyword+=_,$,@,%,#,-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 语法高亮</span><br><span class="line">syntax on</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 高亮字符，让其不受100列限制</span></span><br><span class="line"><span class="string">:highlight OverLength ctermbg=red ctermfg=white guibg=red guifg=white</span></span><br><span class="line"><span class="string">:match OverLength &#x27;\%101v.*&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 状态行颜色</span><br><span class="line">highlight StatusLine guifg=SlateBlue guibg=Yellow</span><br><span class="line">highlight StatusLineNC guifg=Gray guibg=White</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 文件设置</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 不要备份文件（根据自己需要取舍）</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 不要生成swap文件，当buffer被丢弃的时候隐藏它</span></span><br><span class="line"><span class="string">setlocal noswapfile</span></span><br><span class="line"><span class="string">set bufhidden=hide</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 字符间插入的像素行数目</span><br><span class="line"><span class="built_in">set</span> linespace=0</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="string">set wildmenu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 在状态行上显示光标所在位置的行号和列号</span><br><span class="line"><span class="built_in">set</span> ruler</span><br><span class="line"><span class="built_in">set</span> rulerformat=%20(%2*%&lt;%f%=\ %m%r\ %3l\ %c\ %p%%%)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 命令行（在状态行下）的高度，默认为1，这里是2</span></span><br><span class="line"><span class="string">set cmdheight=2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 使回格键（backspace）正常处理indent, eol, start等</span><br><span class="line"><span class="built_in">set</span> backspace=2</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 允许backspace和光标键跨越行边界</span></span><br><span class="line"><span class="string">set whichwrap+=&lt;,&gt;,h,l</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）</span><br><span class="line"><span class="string">&quot;set mouse=a</span></span><br><span class="line"><span class="string">set selection=exclusive</span></span><br><span class="line"><span class="string">set selectmode=mouse,key</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 启动的时候不显示那个援助索马里儿童的提示</span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</span></span><br><span class="line"><span class="string">set report=0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不让vim发出讨厌的滴滴声</span><br><span class="line"><span class="built_in">set</span> noerrorbells</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 在被分割的窗口间显示空白，便于阅读</span></span><br><span class="line"><span class="string">set fillchars=vert:\ ,stl:\ ,stlnc:\</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; 搜索和匹配</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; 高亮显示匹配的括号</span></span><br><span class="line"><span class="string">set showmatch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 匹配括号高亮的时间（单位是十分之一秒）</span><br><span class="line"><span class="built_in">set</span> matchtime=5</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 在搜索的时候忽略大小写</span></span><br><span class="line"><span class="string">set ignorecase</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要高亮被搜索的句子（phrases）</span><br><span class="line"><span class="built_in">set</span> nohlsearch</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 在搜索时，输入的词句的逐字符高亮（类似firefox的搜索）</span></span><br><span class="line"><span class="string">set incsearch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 输入:<span class="built_in">set</span> list命令是应该显示些啥？</span><br><span class="line"><span class="built_in">set</span> listchars=tab:\|\ ,trail:.,extends:&gt;,precedes:&lt;,eol:$</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span></span><br><span class="line"><span class="string">set scrolloff=3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要闪烁</span><br><span class="line"><span class="built_in">set</span> novisualbell</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 我的状态行显示的内容（包括文件类型和解码）</span></span><br><span class="line"><span class="string">set statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 总是显示状态行</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 文本格式和排版</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 自动格式化</span><br><span class="line"><span class="built_in">set</span> formatoptions=tcrqn</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 继承前一行的缩进方式，特别适用于多行注释</span></span><br><span class="line"><span class="string">set autoindent</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 为C程序提供自动缩进</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 使用C样式的缩进</span></span><br><span class="line"><span class="string">&quot;</span> <span class="built_in">set</span> cindent</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 制表符为4</span></span><br><span class="line"><span class="string">set tabstop=4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 统一缩进为4</span><br><span class="line"><span class="string">&quot; set softtabstop=4</span></span><br><span class="line"><span class="string">set shiftwidth=4</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要用空格代替制表符</span><br><span class="line"><span class="built_in">set</span> expandtab</span><br><span class="line"><span class="string">&quot; 如果改成set noexpandtab就是不用四个空格代替一个table</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要换行</span><br><span class="line"><span class="built_in">set</span> nowrap</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 在行和段开始处使用制表符</span></span><br><span class="line"><span class="string">set smarttab</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; CTags的设定</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; 按照名称排序</span></span><br><span class="line"><span class="string">let Tlist_Sort_Type = &quot;</span>name<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 在右侧显示窗口</span><br><span class="line"><span class="built_in">let</span> Tlist_Use_Right_Window = 1</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 压缩方式</span></span><br><span class="line"><span class="string">let Tlist_Compart_Format = 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 如果只有一个buffer，<span class="built_in">kill</span>窗口也<span class="built_in">kill</span>掉buffer</span><br><span class="line"><span class="built_in">let</span> Tlist_Exist_OnlyWindow = 1</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 不要关闭其他文件的tags</span></span><br><span class="line"><span class="string">let Tlist_File_Fold_Auto_Close = 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 不要显示折叠树</span><br><span class="line"><span class="built_in">let</span> Tlist_Enable_Fold_Column = 0</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> Autocommands</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 只在下列文件类型被侦测到的时候显示行号，普通文本文件不显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">map &lt;F5&gt; :call TitleDet2() &lt;cr&gt;</span><br><span class="line"><span class="keyword">function</span> AddTitle2()</span><br><span class="line">    call append(0,<span class="string">&quot;/************************************************************&quot;</span>)</span><br><span class="line">    call append(1,<span class="string">&quot; * Author        : jiujue&quot;</span>)  <span class="comment"># 你的昵称</span></span><br><span class="line">    call append(2,<span class="string">&quot; * Email         : jiujueismmp@qq.com &quot;</span>) <span class="comment"># 你的邮箱</span></span><br><span class="line">    call append(3,<span class="string">&quot; * Last modified : &quot;</span>.strftime(<span class="string">&quot;%Y-%m-%d %H:%M&quot;</span>))</span><br><span class="line">    call append(4,<span class="string">&quot; * Filename      : &quot;</span>.expand(<span class="string">&quot;%:t&quot;</span>))</span><br><span class="line">    call append(5,<span class="string">&quot; * Description   :&quot;</span> )</span><br><span class="line">    call append(6,<span class="string">&quot; * *********************************************************/&quot;</span>)</span><br><span class="line">    echohl WarningMsg |<span class="built_in">echo</span> <span class="string">&quot;Successful in adding the copyright.&quot;</span> | echohl None</span><br><span class="line">endf</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> UpdateTitle2()</span><br><span class="line">    normal m<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    execute &#x27;</span>/<span class="comment"># *Last modified:/s@:.*$@\=strftime(&quot;:\t%Y-%m-%d %H:%M&quot;)@&#x27;</span></span><br><span class="line">    normal <span class="string">&#x27;&#x27;</span></span><br><span class="line">    normal mk</span><br><span class="line">    execute <span class="string">&#x27;/# *Filename:/s@:.*$@\=&quot;:\t\t&quot;.expand(&quot;%:t&quot;)@&#x27;</span></span><br><span class="line">    execute <span class="string">&quot;noh&quot;</span></span><br><span class="line">    normal <span class="string">&#x27;k</span></span><br><span class="line"><span class="string">    echohl WarningMsg | echo &quot;Successful in updating the copy right.&quot; | echohl None</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function TitleDet2()</span></span><br><span class="line"><span class="string">    let n=1</span></span><br><span class="line"><span class="string">    while n &lt; 7</span></span><br><span class="line"><span class="string">        let line = getline(n)</span></span><br><span class="line"><span class="string">        if line =~ &#x27;</span>^\<span class="comment">#\s*\S*Last\smodified:\S*.*$&#x27;</span></span><br><span class="line">            call UpdateTitle2()</span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        endif</span><br><span class="line">        <span class="built_in">let</span> n = n+1</span><br><span class="line">    endwhile</span><br><span class="line">    call AddTitle2()</span><br><span class="line">endfunction</span><br><span class="line"></span><br><span class="line">autocmd BufNewFile *.c,*.py,*.cpp,*.sh,*.java <span class="built_in">exec</span> <span class="string">&quot;:call SetTitle()&quot;</span></span><br><span class="line">func SetTitle()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;sh&#x27;</span></span><br><span class="line">        call setline(1,<span class="string">&quot;\#!/bin/bash&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;# Author: jiujue&quot;</span>) //你的昵称</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;# Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    elseif &amp;filetype == <span class="string">&#x27;cpp&#x27;</span></span><br><span class="line">        call setline(1,<span class="string">&quot;// File Name: &quot;</span>.expand(<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;// Author: jiujue&quot;</span>)//你的昵称</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;// Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;#include&lt;vector&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+4, <span class="string">&quot;#include&lt;list&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+5, <span class="string">&quot;#include&lt;map&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+6, <span class="string">&quot;#include&lt;set&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#include&lt;deque&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;#include&lt;stack&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;#include&lt;bitset&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;#include&lt;algorithm&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;#include&lt;functional&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;#include&lt;numeric&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;#include&lt;utility&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;#include&lt;sstream&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+15, <span class="string">&quot;#include&lt;iostream&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+16, <span class="string">&quot;#include&lt;iomanip&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+17, <span class="string">&quot;#include&lt;cstdio&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+18, <span class="string">&quot;#include&lt;cmath&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+19, <span class="string">&quot;#include&lt;cstdlib&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+20, <span class="string">&quot;#include&lt;cstring&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+21, <span class="string">&quot;#include&lt;ctime&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+22, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+23, <span class="string">&quot;using namespace std;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+24, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+25, <span class="string">&quot;int main(int argc, const char* argv[]&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+26, <span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+27, <span class="string">&quot;    return 0;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+28, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    elseif &amp;filetype == <span class="string">&#x27;python&#x27;</span></span><br><span class="line">        call setline(1,<span class="string">&quot;\#!/usr/bin/env python&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;# Author: jiujue&quot;</span>)//你的昵称</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;# Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    elseif &amp;filetype == <span class="string">&#x27;c&#x27;</span></span><br><span class="line">          call setline(1,<span class="string">&quot;// File Name: &quot;</span>.expand(<span class="string">&quot;%&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;// Author: jiujue&quot;</span>)//你的昵称</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;// Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+3,<span class="string">&quot;#include&lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+4,<span class="string">&quot;#include&lt;string.h&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+5,<span class="string">&quot;#include&lt;stdlib.h&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+6,<span class="string">&quot;#include&lt;time.h&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+7,<span class="string">&quot;#include&lt;math.h&gt;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+8,<span class="string">&quot;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+9,<span class="string">&quot;int main(int argc, const char* argv[])&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+10,<span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+11,<span class="string">&quot;    return 0 ;&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+12,<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        call setline(1,<span class="string">&quot;/*&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;* Author: rechen&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;* Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>))</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;*/&quot;</span>)</span><br><span class="line">        call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    endif</span><br><span class="line"></span><br><span class="line">    autocmd BufNewFile * normal G</span><br><span class="line">endfunc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 能够漂亮地显示.NFO文件</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string">function! SetFileEncodings(encodings)</span></span><br><span class="line"><span class="string">    let b:myfileencodingsbak=&amp;fileencodings</span></span><br><span class="line"><span class="string">    let &amp;fileencodings=a:encodings</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">function! RestoreFileEncodings()</span></span><br><span class="line"><span class="string">    let &amp;fileencodings=b:myfileencodingsbak</span></span><br><span class="line"><span class="string">    unlet b:myfileencodingsbak</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">au BufReadPre *.nfo call SetFileEncodings(&#x27;cp437&#x27;)|set ambiwidth=single</span></span><br><span class="line"><span class="string">au BufReadPost *.nfo call RestoreFileEncodings()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 高亮显示普通txt文件（需要txt.vim脚本）</span><br><span class="line">au BufRead,BufNewFile * setfiletype txt</span><br><span class="line"></span><br><span class="line"><span class="string">&quot; 用空格键来开关折叠</span></span><br><span class="line"><span class="string">set foldenable</span></span><br><span class="line"><span class="string">set foldmethod=manual</span></span><br><span class="line"><span class="string">nnoremap &lt;space&gt; @=((foldclosed(line(&#x27;.&#x27;)) &lt; 0) ? &#x27;zc&#x27; : &#x27;zo&#x27;)&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> minibufexpl插件的一般设置</span><br><span class="line"><span class="built_in">let</span> g:miniBufExplMapWindowNavVim = 1</span><br><span class="line"><span class="built_in">let</span> g:miniBufExplMapWindowNavArrows = 1</span><br><span class="line"><span class="built_in">let</span> g:miniBufExplMapCTabSwitchBufs = 1</span><br><span class="line"><span class="built_in">let</span> g:miniBufExplModSelTarget = 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;myself append</span></span><br><span class="line"><span class="string">&quot;</span> YCM</span><br><span class="line"><span class="string">&quot; 允许自动加载.ycm_extra_conf.py，不再提示</span></span><br><span class="line"><span class="string">let g:ycm_confirm_extra_conf=0</span></span><br><span class="line"><span class="string">&quot;</span> 补全功能在注释中同样有效</span><br><span class="line"><span class="built_in">let</span> g:ycm_complete_in_comments=1</span><br><span class="line"><span class="string">&quot; 开启tags补全引擎</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_tags_files=1</span></span><br><span class="line"><span class="string">&quot;</span> 键入第一个字符时就开始列出匹配项</span><br><span class="line"><span class="built_in">let</span> g:ycm_min_num_of_chars_for_completion=1</span><br><span class="line"><span class="string">&quot; YCM相关快捷键，分别是\gl, \gf, \gg</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;gl :YcmCompleter GoToDeclaration&lt;CR&gt;</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;gf :YcmCompleter GoToDefinition&lt;CR&gt;</span></span><br><span class="line"><span class="string">nnoremap &lt;leader&gt;gg :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set tags+=/data/misc/vim/stdcpp.tags</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set completeopt=menu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>默认打开Taglist</span><br><span class="line"><span class="built_in">let</span> Tlist_Auto_Open=1</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot; Tag list (ctags)</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">let Tlist_Ctags_Cmd = &#x27;/usr/bin/ctags&#x27;</span></span><br><span class="line"><span class="string">let Tlist_Show_One_File = 1 &quot;</span>不同时显示多个文件的tag，只显示当前文件的</span><br><span class="line"><span class="built_in">let</span> Tlist_Exit_OnlyWindow = 1 <span class="string">&quot;如果taglist窗口是最后一个窗口，则退出vim</span></span><br><span class="line"><span class="string">let Tlist_Use_Right_Window = 1 &quot;</span>在右侧窗口中显示taglist窗口</span><br><span class="line"><span class="string">&quot; minibufexpl插件的一般设置</span></span><br><span class="line"><span class="string">let g:miniBufExplMapWindowNavVim = 1</span></span><br><span class="line"><span class="string">let g:miniBufExplMapWindowNavArrows = 1</span></span><br><span class="line"><span class="string">let g:miniBufExplMapCTabSwitchBufs = 1</span></span><br><span class="line"><span class="string">let g:miniBufExplModSelTarget = 1</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>vimrc</title>
    <url>/2021/11/18/vimrc/</url>
    <content><![CDATA[<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;显示行号</span></span><br><span class="line"><span class="string">set nu</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>启动时隐去援助提示</span><br><span class="line"><span class="built_in">set</span> shortmess=atI</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;语法高亮</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>使用vim的键盘模式</span><br><span class="line"><span class="string">&quot;set nocompatible</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>不需要备份</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;没有保存或文件只读时弹出确认</span></span><br><span class="line"><span class="string">set confirm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>鼠标可用</span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;tab缩进</span></span><br><span class="line"><span class="string">set tabstop=4</span></span><br><span class="line"><span class="string">set shiftwidth=4</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string">set smarttab</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>文件自动检测外部更改</span><br><span class="line"><span class="built_in">set</span> autoread</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;c文件自动缩进</span></span><br><span class="line"><span class="string">set cindent</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>自动对齐</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;智能缩进</span></span><br><span class="line"><span class="string">set smartindent</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>高亮查找匹配</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;背景色</span></span><br><span class="line"><span class="string">set background=dark</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>显示匹配</span><br><span class="line"><span class="built_in">set</span> showmatch</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;显示标尺，就是在右下角显示光标位置</span></span><br><span class="line"><span class="string">set ruler</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>去除vi的一致性</span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;允许折叠</span></span><br><span class="line"><span class="string">set foldenable</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span>设置折叠<span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;根据语法折叠</span></span><br><span class="line"><span class="string">set fdm=syntax</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>手动折叠</span><br><span class="line"><span class="string">&quot;set fdm=manual</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>设置键盘映射，通过空格设置折叠</span><br><span class="line">nnoremap &lt;space&gt; @=((foldclosed(line(<span class="string">&#x27;.&#x27;</span>)&lt;0)?<span class="string">&#x27;zc&#x27;</span>:<span class="string">&#x27;zo&#x27;</span>))&lt;CR&gt;</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;不要闪烁</span></span><br><span class="line"><span class="string">set novisualbell</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>启动显示状态行</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;浅色显示当前行</span></span><br><span class="line"><span class="string">autocmd InsertLeave * se nocul</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>用浅色高亮当前行</span><br><span class="line">autocmd InsertEnter * se cul</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;显示输入的命令</span></span><br><span class="line"><span class="string">set showcmd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>被分割窗口之间显示空白</span><br><span class="line"><span class="built_in">set</span> fillchars=vert:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stl:/</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> fillchars=stlnc:/</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode config</title>
    <url>/2021/11/18/vscode-config/</url>
    <content><![CDATA[<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="comment">// vscode默认启用了根据文件类型自动设置tabsize的选项</span></span><br><span class="line">	<span class="attr">&quot;editor.detectIndentation&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="comment">// 重新设定tabsize</span></span><br><span class="line">	<span class="attr">&quot;editor.tabSize&quot;</span>: <span class="number">2</span>,</span><br><span class="line">	<span class="comment">// @ auto complete path</span></span><br><span class="line">	<span class="attr">&quot;path-autocomplete.extensionOnImport&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;path-autocomplete.pathMappings&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;@&quot;</span>: <span class="string">&quot;$&#123;folder&#125;/src&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="comment">// #值设置为true时，每次保存的时候自动格式化；值设置为false时，代码格式化请按shift+alt+F</span></span><br><span class="line">	<span class="attr">&quot;editor.formatOnSave&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="comment">// 添加 vue 支持</span></span><br><span class="line">	<span class="attr">&quot;eslint.validate&quot;</span>: [</span><br><span class="line">		<span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">		<span class="string">&quot;javascriptreact&quot;</span>,</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="attr">&quot;language&quot;</span>: <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;autoFix&quot;</span>: <span class="literal">true</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="string">&quot;vue&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="comment">//  #去掉代码结尾的分号</span></span><br><span class="line">	<span class="attr">&quot;prettier.semi&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="comment">//  #使用带引号替代双引号</span></span><br><span class="line">	<span class="attr">&quot;prettier.singleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;prettier.tabWidth&quot;</span>: <span class="number">2</span>,</span><br><span class="line">	<span class="comment">//  #让函数(名)和后面的括号之间加个空格</span></span><br><span class="line">	<span class="attr">&quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="comment">// #让vue中的js按&quot;prettier&quot;格式进行格式化</span></span><br><span class="line">	<span class="attr">&quot;vetur.format.defaultFormatter.js&quot;</span>: <span class="string">&quot;prettier-eslint&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;vetur.format.defaultFormatterOptions&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;js-beautify-html&quot;</span>: &#123;</span><br><span class="line">			<span class="comment">// #vue组件中html代码格式化样式</span></span><br><span class="line">			<span class="attr">&quot;wrap_attributes&quot;</span>: <span class="string">&quot;force-aligned&quot;</span>, <span class="comment">//也可以设置为“auto”，效果会不一样</span></span><br><span class="line">			<span class="attr">&quot;wrap_line_length&quot;</span>: <span class="number">200</span>,</span><br><span class="line">			<span class="attr">&quot;end_with_newline&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">			<span class="attr">&quot;semi&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">			<span class="attr">&quot;singleQuote&quot;</span>: <span class="literal">true</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">&quot;prettier&quot;</span>: &#123;</span><br><span class="line">			<span class="attr">&quot;semi&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">			<span class="attr">&quot;singleQuote&quot;</span>: <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[jsonc]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[scss]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line">	<span class="attr">&quot;[sass]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[less]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[html]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[python]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.tabSize&quot;</span>: <span class="number">4</span>,</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;ms-python.python&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[json]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;esbenp.prettier-vscode&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;[vue]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;octref.vetur&quot;</span> <span class="comment">// 定义一个默认格式化程序</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="comment">// 格式化stylus, 需安装Manta&#x27;s Stylus Supremacy插件</span></span><br><span class="line">	<span class="attr">&quot;stylusSupremacy.insertColons&quot;</span>: <span class="literal">false</span>, <span class="comment">// 是否插入冒号</span></span><br><span class="line">	<span class="attr">&quot;stylusSupremacy.insertSemicolons&quot;</span>: <span class="literal">false</span>, <span class="comment">// 是否插入分号</span></span><br><span class="line">	<span class="attr">&quot;stylusSupremacy.insertBraces&quot;</span>: <span class="literal">false</span>, <span class="comment">// 是否插入大括号</span></span><br><span class="line">	<span class="attr">&quot;stylusSupremacy.insertNewLineAroundImports&quot;</span>: <span class="literal">false</span>, <span class="comment">// import之后是否换行</span></span><br><span class="line">	<span class="attr">&quot;stylusSupremacy.insertNewLineAroundBlocks&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;prettier.useTabs&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;explorer.confirmDelete&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;[javascript]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;dbaeumer.vscode-eslint&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;diffEditor.ignoreTrimWhitespace&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;explorer.confirmDragAndDrop&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;javascript.updateImportsOnFileMove.enabled&quot;</span>: <span class="string">&quot;always&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;liveServer.settings.donotShowInfoMsg&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;dbaeumer.vscode-eslint&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;editor.formatOnPaste&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;liveServer.settings.donotVerifyTags&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;eslint.alwaysShowStatus&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;editor.accessibilitySupport&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;cSpell.userWords&quot;</span>: [</span><br><span class="line">		<span class="string">&quot;appkey&quot;</span>,</span><br><span class="line">		<span class="string">&quot;bookname&quot;</span>,</span><br><span class="line">		<span class="string">&quot;ctmd&quot;</span>,</span><br><span class="line">		<span class="string">&quot;ecahrts&quot;</span>,</span><br><span class="line">		<span class="string">&quot;echarts&quot;</span>,</span><br><span class="line">		<span class="string">&quot;imgs&quot;</span>,</span><br><span class="line">		<span class="string">&quot;jiujue&quot;</span>,</span><br><span class="line">		<span class="string">&quot;jiujueismmp&quot;</span>,</span><br><span class="line">		<span class="string">&quot;vuex&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="attr">&quot;files.associations&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;*.wpy&quot;</span>: <span class="string">&quot;vue&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;*.wxss&quot;</span>: <span class="string">&quot;wxml&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;*.cjson&quot;</span>: <span class="string">&quot;jsonc&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;*.wxs&quot;</span>: <span class="string">&quot;javascript&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;*.js&quot;</span>: <span class="string">&quot;javascriptreact&quot;</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;cssrem.fixedDigits&quot;</span>: <span class="number">3</span>,</span><br><span class="line">	<span class="attr">&quot;cssrem.autoRemovePrefixZero&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;cssrem.rootFontSize&quot;</span>: <span class="number">24</span>,</span><br><span class="line">	<span class="attr">&quot;cSpell.ignoreWords&quot;</span>: [],</span><br><span class="line">	<span class="attr">&quot;sync.gist&quot;</span>: <span class="string">&quot;66540ba0f59b80d99b4d32670a870c53&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;files.autoSave&quot;</span>: <span class="string">&quot;onFocusChange&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;cSpell.enableFiletypes&quot;</span>: [<span class="string">&quot;vue&quot;</span>],</span><br><span class="line">	<span class="attr">&quot;liveshare.presence&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">	<span class="attr">&quot;eslint.lintTask.enable&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;eslint.packageManager&quot;</span>: <span class="string">&quot;yarn&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;prettier.jsxSingleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;workbench.iconTheme&quot;</span>: <span class="string">&quot;vscode-great-icons&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;workbench.colorTheme&quot;</span>: <span class="string">&quot;GitHub Dark Default&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;editor.renderControlCharacters&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;gitlens.views.remotes.branches.layout&quot;</span>: <span class="string">&quot;list&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;eslint.format.enable&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">	<span class="attr">&quot;editor.fontSize&quot;</span>: <span class="number">14</span>,</span><br><span class="line">	<span class="attr">&quot;editor.quickSuggestions&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;strings&quot;</span>: <span class="literal">true</span></span><br><span class="line">	&#125;, <span class="comment">// 两个选择器中是否换行</span></span><br><span class="line">	<span class="attr">&quot;gogocrow.beautify.jsbeautifyrc&quot;</span>: <span class="string">&quot;/Users/gogocrow/.jsbeautifyrc&quot;</span>,</span><br><span class="line">	<span class="attr">&quot;[jsx]&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;alignWithFirstAttribute&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">		<span class="attr">&quot;bracepadding&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">		<span class="attr">&quot;braces&quot;</span>: <span class="string">&quot;knr&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;spaceclose&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">&quot;methodchain&quot;</span>: <span class="string">&quot;chain&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;objsort&quot;</span>: <span class="string">&quot;all&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;formatObject&quot;</span>: <span class="string">&quot;indent&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;ternaryline&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">&quot;wrap&quot;</span>: <span class="number">100</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;workbench.startupEditor&quot;</span>: <span class="string">&quot;welcomePage&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;editor.minimap.enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;editor.suggestSelection&quot;</span>: <span class="string">&quot;first&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;vsintellicode.modify.editor.suggestSelection&quot;</span>: <span class="string">&quot;automaticallyOverrodeDefaultValue&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;[verilog]&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;editor.defaultFormatter&quot;</span>: <span class="string">&quot;IsaacT.verilog-formatter&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-router 导航守卫</title>
    <url>/2021/11/18/vue-router-%E5%AF%BC%E8%88%AA%E5%AE%88%E5%8D%AB/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="built_in">window</span>.sessionStorage.getItem(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (to.fullPath !== <span class="string">&#x27;/login&#x27;</span> &amp;&amp; !token) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;no token,please login.&#x27;</span>)</span><br><span class="line">    next(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 如果用户未能验证身份，则 `next` 会被调用两次</span></span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>前端读取文件,并保存文件(不使用后端,使用浏览器提供的APi)</title>
    <url>/2021/11/18/%E5%89%8D%E7%AB%AF%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6-%E5%B9%B6%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6-%E4%B8%8D%E4%BD%BF%E7%94%A8%E5%90%8E%E7%AB%AF-%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%90%E4%BE%9B%E7%9A%84APi/</url>
    <content><![CDATA[<pre><code>&lt;body&gt;
    &lt;input type=&quot;file&quot; name=&quot;&quot; id=&quot;inp&quot; /&gt;&lt;br /&gt;
    &lt;button id=&quot;save&quot;&gt;save&lt;/button&gt;&lt;br /&gt;

    &lt;textarea name=&quot;&quot; id=&quot;textarea&quot; cols=&quot;60&quot; rows=&quot;30&quot;&gt;&lt;/textarea&gt;
    &lt;script&gt;
        const inp = document.getElementById(&#39;inp&#39;)
        const save = document.getElementById(&#39;save&#39;)
        const textarea = document.getElementById(&#39;textarea&#39;)
        inp.addEventListener(&#39;change&#39;, function(e) &#123;
            const reader = new FileReader()
            reader.readAsText(e.target.files[0])
            reader.onload = function() &#123;
                const info = this.result
                textarea.value = info
            &#125;
        &#125;)
        save.addEventListener(&#39;click&#39;, function() &#123;
            export_raw(&#39;range.json&#39;, textarea.value)
        &#125;)

        function export_raw(name, data) &#123;
            var urlObject = window.URL || window.webkitURL || window
            var export_blob = new Blob([data])
            var save_link = document.createElementNS(
                &#39;http://www.w3.org/1999/xhtml&#39;,
                &#39;a&#39;
            )
            save_link.href = urlObject.createObjectURL(export_blob)
            save_link.download = name
            fake_click(save_link)
        &#125;
        function fake_click(obj) &#123;
            var ev = document.createEvent(&#39;MouseEvents&#39;)
            ev.initMouseEvent(
                &#39;click&#39;,
                true,
                false,
                window,
                0,
                0,
                0,
                0,
                0,
                false,
                false,
                false,
                false,
                0,
                null
            )
            obj.dispatchEvent(ev)
        &#125;
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>前端页面通过javascript设置全屏-兼容多浏览器</title>
    <url>/2021/11/18/%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E9%80%9A%E8%BF%87javascript%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%8F-%E5%85%BC%E5%AE%B9%E5%A4%9A%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    <content><![CDATA[<pre><code>&lt;body&gt;
    &lt;button id=&quot;fullscreen-toggler&quot;&gt;全屏按钮&lt;/button&gt;
    &lt;script src=&quot;./js/jquery.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;
        // 设置全屏
        let flag = false
        document
            .getElementById(&#39;fullscreen-toggler&#39;)
            .addEventListener(&#39;click&#39;, function (e) &#123;
                var element = document.documentElement // 返回 html dom 中的root 节点 &lt;html&gt;
                if (!flag) &#123;
                    flag = true
                    // 判断浏览器设备类型
                    if (element.requestFullscreen) &#123;
                        element.requestFullscreen()
                    &#125; else if (element.mozRequestFullScreen) &#123;
                        // 兼容火狐
                        element.mozRequestFullScreen()
                    &#125; else if (element.webkitRequestFullscreen) &#123;
                        // 兼容谷歌
                        element.webkitRequestFullscreen()
                    &#125; else if (element.msRequestFullscreen) &#123;
                        // 兼容IE
                        element.msRequestFullscreen()
                    &#125;
                &#125; else &#123;
                    //  退出全屏
                    if (document.exitFullscreen) &#123;
                        document.exitFullscreen()
                    &#125; else if (document.mozCancelFullScreen) &#123;
                        document.mozCancelFullScreen()
                    &#125; else if (document.webkitCancelFullScreen) &#123;
                        document.webkitCancelFullScreen()
                    &#125; else if (document.msExitFullscreen) &#123;
                        document.msExitFullscreen()
                    &#125;
                &#125;
            &#125;)
        
    &lt;/script&gt;
&lt;/body&gt;
</code></pre>
]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>卸载了vsftpd后 配置文件没了 安装也没有 留个做备份 嘿嘿</title>
    <url>/2021/11/18/%E5%8D%B8%E8%BD%BD%E4%BA%86vsftpd%E5%90%8E-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%B2%A1%E4%BA%86-%E5%AE%89%E8%A3%85%E4%B9%9F%E6%B2%A1%E6%9C%89-%E7%95%99%E4%B8%AA%E5%81%9A%E5%A4%87%E4%BB%BD-%E5%98%BF%E5%98%BF/</url>
    <content><![CDATA[<h2 id="mmp卸载了vsftpd后-配置文件没了-安装也没有-留个做备份-嘿嘿"><a href="#mmp卸载了vsftpd后-配置文件没了-安装也没有-留个做备份-嘿嘿" class="headerlink" title="mmp卸载了vsftpd后 配置文件没了 安装也没有 留个做备份 嘿嘿"></a>mmp卸载了vsftpd后 配置文件没了 安装也没有 留个做备份 嘿嘿</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Please see vsftpd.conf.5 for all compiled in defaults.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># READ THIS: This example file is NOT an exhaustive list of vsftpd options.</span></span><br><span class="line"><span class="comment"># Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd&#x27;s</span></span><br><span class="line"><span class="comment"># capabilities.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Run standalone?  vsftpd can run either from an inetd or as a standalone</span></span><br><span class="line"><span class="comment"># daemon started from an initscript.</span></span><br><span class="line">listen=NO</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This directive enables listening on IPv6 sockets. By default, listening</span></span><br><span class="line"><span class="comment"># on the IPv6 &quot;any&quot; address (::) will accept connections from both IPv6</span></span><br><span class="line"><span class="comment"># and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6</span></span><br><span class="line"><span class="comment"># sockets. If you want that (perhaps because you want to listen on specific</span></span><br><span class="line"><span class="comment"># addresses) then you must run two copies of vsftpd with two configuration</span></span><br><span class="line"><span class="comment"># files.</span></span><br><span class="line">listen_ipv6=YES</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Allow anonymous FTP? (Disabled by default).</span></span><br><span class="line">anonymous_enable=NO</span><br><span class="line">/etc/vsftpd.conf [FORMAT=unix] [TYPE=TXT] [POS=20,32][12%] 16/02/19 - 10:08     </span><br><span class="line">:<span class="built_in">set</span> nu!</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/vsftpd start</span><br></pre></td></tr></table></figure>

<p><strong>Done.</strong></p>
]]></content>
      <categories>
        <category>config</category>
      </categories>
      <tags>
        <tag>config</tag>
      </tags>
  </entry>
  <entry>
    <title>原生 浏览器全屏-考虑兼容</title>
    <url>/2021/11/18/%E5%8E%9F%E7%94%9F-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%A8%E5%B1%8F-%E8%80%83%E8%99%91%E5%85%BC%E5%AE%B9/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置全屏</span></span><br><span class="line">			<span class="keyword">let</span> flag = <span class="literal">false</span></span><br><span class="line">			<span class="built_in">document</span></span><br><span class="line">				.getElementById(<span class="string">&#x27;fullscreen-toggler&#x27;</span>)</span><br><span class="line">				.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">					<span class="keyword">var</span> element = <span class="built_in">document</span>.documentElement <span class="comment">// 返回 html dom 中的root 节点 &lt;html&gt;</span></span><br><span class="line">					<span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">						flag = <span class="literal">true</span></span><br><span class="line">						<span class="comment">// 判断浏览器设备类型</span></span><br><span class="line">						<span class="keyword">if</span> (element.requestFullscreen) &#123;</span><br><span class="line">							element.requestFullscreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.mozRequestFullScreen) &#123;</span><br><span class="line">							<span class="comment">// 兼容火狐</span></span><br><span class="line">							element.mozRequestFullScreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.webkitRequestFullscreen) &#123;</span><br><span class="line">							<span class="comment">// 兼容谷歌</span></span><br><span class="line">							element.webkitRequestFullscreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (element.msRequestFullscreen) &#123;</span><br><span class="line">							<span class="comment">// 兼容IE</span></span><br><span class="line">							element.msRequestFullscreen()</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="comment">//  退出全屏</span></span><br><span class="line">						<span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">							<span class="built_in">document</span>.exitFullscreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">							<span class="built_in">document</span>.mozCancelFullScreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitCancelFullScreen) &#123;</span><br><span class="line">							<span class="built_in">document</span>.webkitCancelFullScreen()</span><br><span class="line">						&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;</span><br><span class="line">							<span class="built_in">document</span>.msExitFullscreen()</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>原生ajax 上传进度和下载进度</title>
    <url>/2021/11/18/%E5%8E%9F%E7%94%9Fajax-%E4%B8%8A%E4%BC%A0%E8%BF%9B%E5%BA%A6%E5%92%8C%E4%B8%8B%E8%BD%BD%E8%BF%9B%E5%BA%A6/</url>
    <content><![CDATA[<p>注意:</p>
<ol>
<li>上传进度使用xhr.upload.onprogress事件.</li>
<li>下载进度使用xhr.onprogress事件.<hr/>
上传 进度</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">button</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置一个进度条，这里使用h5新标签，开始隐藏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">max</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">&#x27;form&#x27;</span>).onsubmit = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        e.preventDefault();</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 使用FormData收集输入框的值（这里是选择的图片）</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> fd = <span class="keyword">new</span> FormData(<span class="built_in">this</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// ajax提交fd对象</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 接口文档，查看ppt即可</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">// 找到 进度条标签 </span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> progress = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;progress&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 注册上传监听事件</span></span></span><br><span class="line"><span class="javascript">        xhr.upload.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            progress.style.display = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            progress.max = e.total; <span class="comment">// 文件总大小，单位字节</span></span></span><br><span class="line"><span class="javascript">            progress.value = e.loaded; <span class="comment">// 已经上传了多少字节</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        xhr.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="built_in">this</span>.responseText);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        xhr.open(<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;http://www.itcbc.com:3006/api/formdata&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        xhr.send(fd);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>下载进度</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.onprogress = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; </span><br><span class="line">    progress.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    progress.max = e.total; <span class="comment">// 文件总大小，单位字节 progress.value = e.loaded; // 已经上传了多少字节</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>











]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>将数字 12345678 转化成 RMB 形式 如： 12,345,678</title>
    <url>/2021/11/18/%E5%B0%86%E6%95%B0%E5%AD%97-12345678-%E8%BD%AC%E5%8C%96%E6%88%90-RMB-%E5%BD%A2%E5%BC%8F-%E5%A6%82%EF%BC%9A-12-345-678/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;1234132131232135678&#x27;</span></span><br><span class="line"><span class="keyword">let</span> tmp = [...str].reverse()</span><br><span class="line">tmp = tmp</span><br><span class="line">    .map(<span class="function">(<span class="params">it, ind</span>) =&gt;</span></span><br><span class="line">        ind % <span class="number">3</span> === <span class="number">0</span> ?</span><br><span class="line">        [tmp[ind], tmp[ind + <span class="number">1</span>], tmp[ind + <span class="number">2</span>]]</span><br><span class="line">        .reverse()</span><br><span class="line">        .filter(<span class="function">(<span class="params">it</span>) =&gt;</span> it !== <span class="literal">undefined</span>)</span><br><span class="line">        .join(<span class="string">&#x27;&#x27;</span>) :</span><br><span class="line">        <span class="literal">undefined</span></span><br><span class="line">    )</span><br><span class="line">    .filter(<span class="function">(<span class="params">it</span>) =&gt;</span> it !== <span class="literal">undefined</span>)</span><br><span class="line">    .reverse()</span><br><span class="line">    .join(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(tmp)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
      </tags>
  </entry>
  <entry>
    <title>手写 miniVue -  02_响应式</title>
    <url>/2021/11/21/%E6%89%8B%E5%86%99-miniVue-02-%E5%93%8D%E5%BA%94%E5%BC%8F/</url>
    <content><![CDATA[<p>02_vue2_reactive</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Watcher</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> _effect = <span class="literal">null</span></span><br><span class="line">	<span class="keyword">static</span> <span class="function"><span class="title">WatchEffect</span>(<span class="params">effect</span>)</span> &#123;</span><br><span class="line">		Watcher._effect = effect</span><br><span class="line">		effect()</span><br><span class="line">		Watcher._effect = <span class="literal">null</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@class <span class="variable">Dep</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dep</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers = <span class="keyword">new</span> <span class="built_in">Set</span>()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">depend</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.add(Watcher._effect)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">notify</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.forEach(<span class="function"><span class="params">watcher</span> =&gt;</span> watcher <span class="keyword">instanceof</span> <span class="built_in">Function</span> &amp;&amp; watcher())</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * depMap :</span></span><br><span class="line"><span class="comment"> *  &#123;</span></span><br><span class="line"><span class="comment"> *    obj_1:&#123;prop_key_01:dep&#125;,</span></span><br><span class="line"><span class="comment"> *    obj_2:&#123;prop_key_02:dep&#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> depMap = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDep</span>(<span class="params">obj, prop_key</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> wrap = depMap.get(obj)</span><br><span class="line">	<span class="keyword">if</span> (!wrap) &#123;</span><br><span class="line">		wrap = <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">		depMap.set(obj, wrap)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">let</span> dep = wrap.get(prop_key)</span><br><span class="line">	<span class="keyword">if</span> (!dep) &#123;</span><br><span class="line">		dep = <span class="keyword">new</span> Dep()</span><br><span class="line">		wrap.set(prop_key, dep)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dep</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useReactive</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> _data = &#123;&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> prop_key <span class="keyword">in</span> data) &#123;</span><br><span class="line">		<span class="keyword">const</span> dep = getDep(data, prop_key)</span><br><span class="line">		<span class="built_in">Object</span>.defineProperty(_data, prop_key, &#123;</span><br><span class="line">			<span class="function"><span class="title">get</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">				dep.depend()</span><br><span class="line">				<span class="keyword">return</span> data[prop_key]</span><br><span class="line">			&#125;,</span><br><span class="line">			<span class="function"><span class="title">set</span>(<span class="params">newVal</span>)</span> &#123;</span><br><span class="line">				data[prop_key] = newVal</span><br><span class="line">				dep.notify()</span><br><span class="line">				<span class="keyword">return</span> data[prop_key]</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> _data</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vm = useReactive(&#123; <span class="attr">name</span>: <span class="string">&#x27;jiujue&#x27;</span>, <span class="attr">age</span>: <span class="number">12</span> &#125;)</span><br><span class="line">Watcher.WatchEffect(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&#x27;effect fn exec-&gt;&#x27;</span>, vm.name)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>03_vue3_reactive</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Watcher</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> _effect = <span class="literal">null</span></span><br><span class="line">	<span class="keyword">static</span> <span class="function"><span class="title">WatchEffect</span>(<span class="params">effect</span>)</span> &#123;</span><br><span class="line">		Watcher._effect = effect</span><br><span class="line">		effect()</span><br><span class="line">		Watcher._effect = <span class="literal">null</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@class <span class="variable">Dep</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dep</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers = <span class="keyword">new</span> <span class="built_in">Set</span>()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">depend</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.add(Watcher._effect)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">notify</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.forEach(<span class="function"><span class="params">watcher</span> =&gt;</span> watcher <span class="keyword">instanceof</span> <span class="built_in">Function</span> &amp;&amp; watcher())</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * depMap :</span></span><br><span class="line"><span class="comment"> *  &#123;</span></span><br><span class="line"><span class="comment"> *    obj_1:&#123;prop_key_01:dep&#125;,</span></span><br><span class="line"><span class="comment"> *    obj_2:&#123;prop_key_02:dep&#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> depMap = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDep</span>(<span class="params">obj, prop_key</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> wrap = depMap.get(obj)</span><br><span class="line">	<span class="keyword">if</span> (!wrap) &#123;</span><br><span class="line">		wrap = <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">		depMap.set(obj, wrap)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">let</span> dep = wrap.get(prop_key)</span><br><span class="line">	<span class="keyword">if</span> (!dep) &#123;</span><br><span class="line">		dep = <span class="keyword">new</span> Dep()</span><br><span class="line">		wrap.set(prop_key, dep)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dep</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useReactive</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Proxy</span>(data, &#123;</span><br><span class="line">		<span class="function"><span class="title">get</span>(<span class="params">target, prop_key</span>)</span> &#123;</span><br><span class="line">			getDep(target, prop_key).depend()</span><br><span class="line">			<span class="keyword">return</span> data[prop_key]</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="function"><span class="title">set</span>(<span class="params">target, prop_key, newVal</span>)</span> &#123;</span><br><span class="line">			data[prop_key] = newVal</span><br><span class="line">			getDep(target, prop_key).notify()</span><br><span class="line">			<span class="keyword">return</span> data[prop_key]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*let vm = useReactive(&#123; name: &#x27;jiujue&#x27;, age: 12 &#125;)</span></span><br><span class="line"><span class="comment">Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">	console.log(&#x27;effect name fn exec-&gt;  vm.name&#x27;, vm.name)</span></span><br><span class="line"><span class="comment">&#125;)</span></span><br><span class="line"><span class="comment">Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">	console.log(&#x27;effect age fn exec-&gt; vm.age&#x27;, vm.age)</span></span><br><span class="line"><span class="comment">&#125;)</span></span><br><span class="line"><span class="comment">Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">	console.log(&#x27;effect age fn exec-&gt; vm.age &amp;&amp; age&#x27;, vm.name, vm.age)</span></span><br><span class="line"><span class="comment">&#125;)*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>手写</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>手写</tag>
      </tags>
  </entry>
  <entry>
    <title>手写 miniVue - 03_导出外部实例</title>
    <url>/2021/11/21/%E6%89%8B%E5%86%99-miniVue-03-%E5%AF%BC%E5%87%BA%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">tag, props, children</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ([...arguments].length === <span class="number">1</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">arguments</span>[<span class="number">0</span>] === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> &#123; <span class="attr">tag</span>: <span class="string">&#x27;text&#x27;</span>, <span class="attr">val</span>: <span class="built_in">arguments</span>[<span class="number">0</span>] &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &#123; tag, props, children &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mount</span>(<span class="params">vnode, container</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> root</span><br><span class="line">	<span class="comment">// 0. obtain root node</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> container === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">		root = <span class="built_in">document</span>.querySelector(container)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		root = container</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 1 process text node</span></span><br><span class="line">	<span class="keyword">if</span> (vnode.tag === <span class="string">&#x27;text&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">let</span> el = (vnode.el = <span class="built_in">document</span>.createTextNode(vnode.val))</span><br><span class="line">		root.appendChild(el)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//2. process normal node</span></span><br><span class="line">	<span class="keyword">let</span> el = (vnode.el = <span class="built_in">document</span>.createElement(vnode.tag))</span><br><span class="line">	<span class="comment">// 2.0. create  real el ,attach on vnode.el</span></span><br><span class="line">	<span class="comment">// 2.1. process properties</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> prop_key <span class="keyword">in</span> vnode.props) &#123;</span><br><span class="line">		<span class="comment">//2.1.0 judge type</span></span><br><span class="line">		<span class="keyword">if</span> (prop_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">			<span class="comment">// 2.1.1 prop_key is a  event</span></span><br><span class="line">			el.addEventListener(</span><br><span class="line">				prop_key.slice(<span class="number">2</span>).toLowerCase(),</span><br><span class="line">				vnode.props[prop_key]</span><br><span class="line">			)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (prop_key === <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">			<span class="comment">// 2.1.1 prop_key is a  event</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> style_key <span class="keyword">in</span> vnode.props[prop_key]) &#123;</span><br><span class="line">				el.style[style_key] = vnode.props[prop_key][style_key].toString()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 2.2 prop_key is a prop</span></span><br><span class="line">			el.setAttribute(prop_key, vnode.props[prop_key])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 3. process children</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">if</span> (vnode.children &amp;&amp; <span class="built_in">Array</span>.isArray(vnode.children)) &#123;</span><br><span class="line">		vnode.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, el))</span><br><span class="line">	&#125;</span><br><span class="line">	root?.appendChild(el)</span><br><span class="line">	<span class="comment">// the end, attach to root node</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unmount</span>(<span class="params">parent, oNode</span>) </span>&#123;</span><br><span class="line">	parent?.removeChild(oNode)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">patch</span>(<span class="params">o, n</span>) </span>&#123;</span><br><span class="line">	<span class="comment">// o or n is text node</span></span><br><span class="line">	<span class="keyword">if</span> (o.tag === <span class="string">&#x27;text&#x27;</span> || n.tag === <span class="string">&#x27;text&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (o.val !== n.val) &#123;</span><br><span class="line">			<span class="keyword">let</span> tmp_parent_el = o.el.parentElement</span><br><span class="line">			unmount(tmp_parent_el, o.el)</span><br><span class="line">			mount(n, tmp_parent_el)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> o === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="keyword">typeof</span> n === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">		<span class="comment">// diff tag ,diff node</span></span><br><span class="line">		<span class="keyword">if</span> (o.tag !== n.tag) &#123;</span><br><span class="line">			<span class="keyword">let</span> tmp_parent_el = o.el?.parentElement</span><br><span class="line">			unmount(tmp_parent_el, o.el)</span><br><span class="line">			mount(n, tmp_parent_el)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// x.0 same tag,replace the differs</span></span><br><span class="line">			<span class="comment">// x.1 replace</span></span><br><span class="line">			<span class="comment">// x.1 replace attribute</span></span><br><span class="line">			<span class="comment">// x.1.1 set the new attr</span></span><br><span class="line">			<span class="keyword">let</span> nProps = n.props</span><br><span class="line">			<span class="keyword">let</span> oProps = o.props</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> n_key <span class="keyword">in</span> nProps) &#123;</span><br><span class="line">				<span class="comment">// process style</span></span><br><span class="line">				<span class="keyword">if</span> (n_key === <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">const</span> style_key <span class="keyword">in</span> nProps.style) &#123;</span><br><span class="line">						o.el.style[style_key] = nProps.style[style_key].toString()</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// process event</span></span><br><span class="line">				<span class="keyword">if</span> (n_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">					<span class="comment">// add new events</span></span><br><span class="line">					o.el?.addEventListener(n_key.slice(<span class="number">2</span>).toLowerCase(), nProps[n_key])</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">// replace/add attr</span></span><br><span class="line">					<span class="keyword">if</span> (n_key !== <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">						o.el?.setAttribute(n_key, nProps[n_key])</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// x.1.2 remove the old attr(key not in n)</span></span><br><span class="line">			<span class="keyword">if</span> (nProps !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (!(<span class="string">&#x27;style&#x27;</span> <span class="keyword">in</span> nProps) &amp;&amp; o.el !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					o.el.style = <span class="string">&#x27;&#x27;</span></span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">const</span> o_style_key <span class="keyword">in</span> oProps.style) &#123;</span><br><span class="line">						<span class="keyword">if</span> (!(o_style_key <span class="keyword">in</span> nProps.style)) &#123;</span><br><span class="line">							o.el.style[o_style_key] = <span class="string">&#x27;&#x27;</span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> o_key <span class="keyword">in</span> oProps) &#123;</span><br><span class="line">				<span class="comment">// remove all old events</span></span><br><span class="line">				<span class="keyword">if</span> (o_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">					o.el?.removeEventListener(o_key.slice(<span class="number">2</span>).toLowerCase(), oProps[o_key])</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!(o_key <span class="keyword">in</span> nProps)) &#123;</span><br><span class="line">					<span class="comment">// remove old attr</span></span><br><span class="line">					o.el.removeAttribute(o_key)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// x.2 replace children</span></span><br><span class="line">			<span class="comment">// x.2.1 o,n has children</span></span><br><span class="line">			<span class="keyword">if</span> (o.children !== <span class="literal">undefined</span> &amp;&amp; n.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="comment">// o or n children.length === 0</span></span><br><span class="line">				<span class="keyword">if</span> (o.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="comment">// o.children.length === 0</span></span><br><span class="line">					n.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, o.el))</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (n.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="comment">// n.children.length === 0</span></span><br><span class="line">					o.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> unmount(o.el, it.el))</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (o.children === <span class="literal">undefined</span> || n.children === <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (o.children === <span class="literal">undefined</span> &amp;&amp; n.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					n.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, o.el))</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (n.children === <span class="literal">undefined</span> &amp;&amp; o.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					o.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> unmount(it, o.el))</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.children.length !== <span class="number">0</span> &amp;&amp; n.children.length !== <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="comment">// o or n children.length !== 0</span></span><br><span class="line">				<span class="comment">// common length</span></span><br><span class="line">				<span class="keyword">let</span> minLen = <span class="built_in">Math</span>.min(o.children.length, n.children.length)</span><br><span class="line">				<span class="comment">// process common length</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; minLen; index++) &#123;</span><br><span class="line">					patch(o.children[index], n.children[index])</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// process rest length</span></span><br><span class="line">				<span class="comment">// o.length &gt; n.length , remove the surplus</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = minLen; index &lt; o.children.length; index++) &#123;</span><br><span class="line">					unmount(o.el, o.children[index].el)</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// o.length &lt; n.length , add the last</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = minLen; index &lt; n.children.length; index++) &#123;</span><br><span class="line">					mount(n.children[index], o.el)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Watcher</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> _effect = <span class="literal">null</span></span><br><span class="line">	<span class="keyword">static</span> <span class="function"><span class="title">WatchEffect</span>(<span class="params">effect</span>)</span> &#123;</span><br><span class="line">		Watcher._effect = effect</span><br><span class="line">		effect()</span><br><span class="line">		Watcher._effect = <span class="literal">null</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dep</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers = <span class="keyword">new</span> <span class="built_in">Set</span>()</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">depend</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.add(Watcher._effect)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">notify</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="built_in">this</span>.watchers.forEach(<span class="function"><span class="params">watcher</span> =&gt;</span> &#123;</span><br><span class="line">			watcher <span class="keyword">instanceof</span> <span class="built_in">Function</span> &amp;&amp; watcher()</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * depMap :</span></span><br><span class="line"><span class="comment"> *  &#123;</span></span><br><span class="line"><span class="comment"> *    obj_1:&#123;prop_key_01:dep&#125;,</span></span><br><span class="line"><span class="comment"> *    obj_2:&#123;prop_key_02:dep&#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> depMap = <span class="keyword">new</span> <span class="built_in">WeakMap</span>()</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDep</span>(<span class="params">obj, prop_key</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> wrap = depMap.get(obj)</span><br><span class="line">	<span class="keyword">if</span> (!wrap) &#123;</span><br><span class="line">		wrap = <span class="keyword">new</span> <span class="built_in">Map</span>()</span><br><span class="line">		depMap.set(obj, wrap)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">let</span> dep = wrap.get(prop_key)</span><br><span class="line">	<span class="keyword">if</span> (!dep) &#123;</span><br><span class="line">		dep = <span class="keyword">new</span> Dep()</span><br><span class="line">		wrap.set(prop_key, dep)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dep</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">useReactive</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Proxy</span>(data, &#123;</span><br><span class="line">		<span class="function"><span class="title">get</span>(<span class="params">target, prop_key</span>)</span> &#123;</span><br><span class="line">			getDep(target, prop_key).depend()</span><br><span class="line">			<span class="keyword">return</span> data[prop_key]</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="function"><span class="title">set</span>(<span class="params">target, prop_key, newVal</span>)</span> &#123;</span><br><span class="line">			data[prop_key] = newVal</span><br><span class="line">			getDep(target, prop_key).notify()</span><br><span class="line">			<span class="keyword">return</span> data[prop_key]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// let vm = useReactive(&#123; name: &#x27;jiujue&#x27;, age: 12 &#125;)</span></span><br><span class="line"><span class="comment">// Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">// 	console.log(&#x27;effect name fn exec-&gt;  vm.name&#x27;, vm.name)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">// 	console.log(&#x27;effect age fn exec-&gt; vm.age&#x27;, vm.age)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"><span class="comment">// Watcher.WatchEffect(function() &#123;</span></span><br><span class="line"><span class="comment">// 	console.log(&#x27;effect age fn exec-&gt; vm.age &amp;&amp; age&#x27;, vm.name, vm.age)</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createAppByMiniVue</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> data = useReactive(options.data)</span><br><span class="line">	<span class="keyword">let</span> isMounted = <span class="literal">false</span></span><br><span class="line">	<span class="keyword">let</span> oldNode = <span class="literal">null</span></span><br><span class="line">	<span class="keyword">return</span> &#123;</span><br><span class="line">		data,</span><br><span class="line">		<span class="function"><span class="title">mount</span>(<span class="params">container</span>)</span> &#123;</span><br><span class="line">			Watcher.WatchEffect(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">				<span class="keyword">if</span> (!isMounted) &#123;</span><br><span class="line">					<span class="keyword">let</span> vnode = options.render.call(data)</span><br><span class="line">					oldNode = vnode</span><br><span class="line">					mount(vnode, container)</span><br><span class="line">					isMounted = <span class="literal">true</span></span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">let</span> newVnode = options.render.call(data)</span><br><span class="line">					patch(oldNode, newVnode)</span><br><span class="line">					oldNode = newVnode</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>mini vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">			<span class="comment">/* div &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">				width: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="css">				height: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="css">				color: purple;</span></span></span><br><span class="line"><span class="comment"><span class="css">			&#125; */</span></span></span><br><span class="line"><span class="css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./01_渲染实现/01_render.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="keyword">function</span> <span class="title">tap</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				e.preventDefault()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(e.target)</span></span><br><span class="line"><span class="javascript">				<span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">			&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> vnode = h(<span class="string">&#x27;div&#x27;</span>, &#123;&#125;, [</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>, <span class="attr">width</span>: <span class="string">&#x27;200px&#x27;</span>, <span class="attr">height</span>: <span class="string">&#x27;100px&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="attr">OnClick</span>: tap &#125;, [h(<span class="string">&#x27;wht is you life ?&#x27;</span>)]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;green&#x27;</span>, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? joy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;input&#x27;</span>, &#123;&#125;, [])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;tan&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ?&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;orange&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? ros&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;h1&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [h(<span class="string">&#x27;nothing.&#x27;</span>)])</span></span><br><span class="line"><span class="javascript">			])</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> vnode2 = h(<span class="string">&#x27;div&#x27;</span>, &#123;&#125;, [h(<span class="string">&#x27;input&#x27;</span>, &#123; <span class="attr">value</span>: <span class="string">&#x27;123&#x27;</span> &#125;, [])])</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="comment">// let vnode = h(&#x27;bob is handsome guy.&#x27;)</span></span></span><br><span class="line"><span class="javascript">			<span class="comment">// let vnode2 = h(&#x27;alice is a prettier girl.&#x27;)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">			mount(vnode, <span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&#x27;o&#x27;</span>, vnode)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&#x27;n&#x27;</span>, vnode2)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> patch(vnode, vnode2), <span class="number">1000</span>)</span></span><br><span class="line"><span class="javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书写</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>手写</tag>
      </tags>
  </entry>
  <entry>
    <title>手写 miniVue - 01_渲染实现</title>
    <url>/2021/11/21/%E6%89%8B%E5%86%99-miniVue/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params">tag, props, children</span>) </span>&#123;</span><br><span class="line">	<span class="comment">// js obj -&gt; vnode</span></span><br><span class="line">	<span class="keyword">if</span> ([...arguments].length === <span class="number">1</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">arguments</span>[<span class="number">0</span>] === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> &#123; <span class="attr">tag</span>: <span class="string">&#x27;text&#x27;</span>, <span class="attr">val</span>: <span class="built_in">arguments</span>[<span class="number">0</span>] &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> &#123; tag, props, children &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mount</span>(<span class="params">vnode, container</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> root</span><br><span class="line">	<span class="comment">// 0. obtain root node</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> container === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">		root = <span class="built_in">document</span>.querySelector(container)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		root = container</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 1 process text node</span></span><br><span class="line">	<span class="keyword">if</span> (vnode.tag === <span class="string">&#x27;text&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">let</span> el = (vnode.el = <span class="built_in">document</span>.createTextNode(vnode.val))</span><br><span class="line">		root.appendChild(el)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//2. process normal node</span></span><br><span class="line">	<span class="keyword">let</span> el = (vnode.el = <span class="built_in">document</span>.createElement(vnode.tag))</span><br><span class="line">	<span class="comment">// 2.0. create  real el ,attach on vnode.el</span></span><br><span class="line">	<span class="comment">// 2.1. process properties</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> prop_key <span class="keyword">in</span> vnode.props) &#123;</span><br><span class="line">		<span class="comment">//2.1.0 judge type</span></span><br><span class="line">		<span class="keyword">if</span> (prop_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">			<span class="comment">// 2.1.1 prop_key is a  event</span></span><br><span class="line">			el.addEventListener(</span><br><span class="line">				prop_key.slice(<span class="number">2</span>).toLowerCase(),</span><br><span class="line">				vnode.props[prop_key]</span><br><span class="line">			)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (prop_key === <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">			<span class="comment">// 2.1.1 prop_key is a  event</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> style_key <span class="keyword">in</span> vnode.props[prop_key]) &#123;</span><br><span class="line">				el.style[style_key] = vnode.props[prop_key][style_key].toString()</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 2.2 prop_key is a prop</span></span><br><span class="line">			el.setAttribute(prop_key, vnode.props[prop_key])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 3. process children</span></span><br><span class="line">	<span class="comment">//</span></span><br><span class="line">	<span class="keyword">if</span> (vnode.children &amp;&amp; <span class="built_in">Array</span>.isArray(vnode.children)) &#123;</span><br><span class="line">		vnode.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, el))</span><br><span class="line">	&#125;</span><br><span class="line">	root?.appendChild(el)</span><br><span class="line">	<span class="comment">// the end, attach to root node</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unmount</span>(<span class="params">parent, oNode</span>) </span>&#123;</span><br><span class="line">	parent?.removeChild(oNode)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">patch</span>(<span class="params">o, n</span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&#x27;update ...&#x27;</span>)</span><br><span class="line">	<span class="comment">// o or n is text node</span></span><br><span class="line">	<span class="keyword">if</span> (o.tag === <span class="string">&#x27;text&#x27;</span> || n.tag === <span class="string">&#x27;text&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (o.val !== n.val) &#123;</span><br><span class="line">			<span class="keyword">let</span> tmp_parent_el = o.el.parentElement</span><br><span class="line">			unmount(tmp_parent_el, o.el)</span><br><span class="line">			mount(n, tmp_parent_el)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> o === <span class="string">&#x27;object&#x27;</span> &amp;&amp; <span class="keyword">typeof</span> n === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">		<span class="comment">// diff tag ,diff node</span></span><br><span class="line">		<span class="keyword">if</span> (o.tag !== n.tag) &#123;</span><br><span class="line">			<span class="keyword">let</span> tmp_parent_el = o.el?.parentElement</span><br><span class="line">			unmount(tmp_parent_el, o.el)</span><br><span class="line">			mount(n, tmp_parent_el)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// x.0 same tag,replace the differs</span></span><br><span class="line">			<span class="comment">// x.1 replace</span></span><br><span class="line">			<span class="comment">// x.1 replace attribute</span></span><br><span class="line">			<span class="comment">// x.1.1 set the new attr</span></span><br><span class="line">			<span class="keyword">let</span> nProps = n.props</span><br><span class="line">			<span class="keyword">let</span> oProps = o.props</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> n_key <span class="keyword">in</span> nProps) &#123;</span><br><span class="line">				<span class="comment">// process style</span></span><br><span class="line">				<span class="keyword">if</span> (n_key === <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">const</span> style_key <span class="keyword">in</span> nProps.style) &#123;</span><br><span class="line">						o.el.style[style_key] = nProps.style[style_key].toString()</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// process event</span></span><br><span class="line">				<span class="keyword">if</span> (n_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">					<span class="comment">// add new events</span></span><br><span class="line">					o.el.addEventListener(n_key.slice(<span class="number">2</span>).toLowerCase(), nProps[n_key])</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">// replace/add attr</span></span><br><span class="line">					<span class="keyword">if</span> (n_key !== <span class="string">&#x27;style&#x27;</span>) &#123;</span><br><span class="line">						o.el.setAttribute(n_key, nProps[n_key])</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// x.1.2 remove the old attr(key not in n)</span></span><br><span class="line">			<span class="keyword">if</span> (nProps !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (!(<span class="string">&#x27;style&#x27;</span> <span class="keyword">in</span> nProps) &amp;&amp; o.el !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					o.el.style = <span class="string">&#x27;&#x27;</span></span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">const</span> o_style_key <span class="keyword">in</span> oProps.style) &#123;</span><br><span class="line">						<span class="keyword">if</span> (!(o_style_key <span class="keyword">in</span> nProps.style)) &#123;</span><br><span class="line">							o.el.style[o_style_key] = <span class="string">&#x27;&#x27;</span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> o_key <span class="keyword">in</span> oProps) &#123;</span><br><span class="line">				<span class="comment">// remove all old events</span></span><br><span class="line">				<span class="keyword">if</span> (o_key.startsWith(<span class="string">&#x27;On&#x27;</span>)) &#123;</span><br><span class="line">					o.el.removeEventListener(o_key.slice(<span class="number">2</span>).toLowerCase(), oProps[o_key])</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!(o_key <span class="keyword">in</span> nProps)) &#123;</span><br><span class="line">					<span class="comment">// remove old attr</span></span><br><span class="line">					o.el.removeAttribute(o_key)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// x.2 replace children</span></span><br><span class="line">			<span class="comment">// x.2.1 o,n has children</span></span><br><span class="line">			<span class="keyword">if</span> (o.children !== <span class="literal">undefined</span> &amp;&amp; n.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="comment">// o or n children.length === 0</span></span><br><span class="line">				<span class="keyword">if</span> (o.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="comment">// o.children.length === 0</span></span><br><span class="line">					n.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, o.el))</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (n.children.length === <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="comment">// n.children.length === 0</span></span><br><span class="line">					o.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> unmount(o.el, it.el))</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (o.children === <span class="literal">undefined</span> || n.children === <span class="literal">undefined</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (o.children === <span class="literal">undefined</span> &amp;&amp; n.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					n.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> mount(it, o.el))</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (n.children === <span class="literal">undefined</span> &amp;&amp; o.children !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">					o.children.forEach(<span class="function"><span class="params">it</span> =&gt;</span> unmount(it, o.el))</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (o.children.length !== <span class="number">0</span> &amp;&amp; n.children.length !== <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="comment">// o or n children.length !== 0</span></span><br><span class="line">				<span class="comment">// common length</span></span><br><span class="line">				<span class="keyword">let</span> minLen = <span class="built_in">Math</span>.min(o.children.length, n.children.length)</span><br><span class="line">				<span class="comment">// process common length</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; minLen; index++) &#123;</span><br><span class="line">					patch(o.children[index], n.children[index])</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// process rest length</span></span><br><span class="line">				<span class="comment">// o.length &gt; n.length , remove the surplus</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = minLen; index &lt; o.children.length; index++) &#123;</span><br><span class="line">					unmount(o.el, o.children[index].el)</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// o.length &lt; n.length , add the last</span></span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">let</span> index = minLen; index &lt; n.children.length; index++) &#123;</span><br><span class="line">					mount(n.children[index], o.el)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>mini vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">			<span class="comment">/* div &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">				width: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="css">				height: 200px;</span></span></span><br><span class="line"><span class="comment"><span class="css">				color: purple;</span></span></span><br><span class="line"><span class="comment"><span class="css">			&#125; */</span></span></span><br><span class="line"><span class="css">		</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./01_render.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="keyword">function</span> <span class="title">tap</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				e.preventDefault()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(e.target)</span></span><br><span class="line"><span class="javascript">				<span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">			&#125;</span></span><br><span class="line"><span class="javascript">			<span class="function"><span class="keyword">function</span> <span class="title">tap02</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">				e.preventDefault()</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(<span class="string">&#x27;tap 02&#x27;</span>, e.target)</span></span><br><span class="line"><span class="javascript">				<span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">			&#125;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> vnode = h(<span class="string">&#x27;div&#x27;</span>, &#123;&#125;, [</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>, <span class="attr">width</span>: <span class="string">&#x27;200px&#x27;</span>, <span class="attr">height</span>: <span class="string">&#x27;100px&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="attr">OnClick</span>: tap &#125;, [h(<span class="string">&#x27;wht is you life ?&#x27;</span>)]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;green&#x27;</span>, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? joy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;input&#x27;</span>, &#123;&#125;, [])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="attr">OnClick</span>: tap &#125;, [h(<span class="string">&#x27;wht is you life ?&#x27;</span>)]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;tan&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ?&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;orange&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? ros&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;h1&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap &#125;, [h(<span class="string">&#x27;nothing.&#x27;</span>)])</span></span><br><span class="line"><span class="javascript">			])</span></span><br><span class="line"><span class="javascript">			<span class="keyword">let</span> vnode2 = h(<span class="string">&#x27;div&#x27;</span>, &#123;&#125;, [</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>, <span class="attr">width</span>: <span class="string">&#x27;200px&#x27;</span>, <span class="attr">height</span>: <span class="string">&#x27;100px&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="attr">OnClick</span>: tap02 &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ?&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;green&#x27;</span>, <span class="attr">OnClick</span>: tap02 &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? joy&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;input&#x27;</span>, &#123;&#125;, [])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;div&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;green&#x27;</span> &#125; &#125;, [</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h3&#x27;</span>, &#123; <span class="attr">color</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="attr">OnClick</span>: tap02 &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ?&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;purple&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap02 &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ?&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					]),</span></span><br><span class="line"><span class="javascript">					h(<span class="string">&#x27;h2&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;gold&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap02 &#125;, [</span></span><br><span class="line"><span class="javascript">						h(<span class="string">&#x27;wht is you life ? ros&#x27;</span>)</span></span><br><span class="line"><span class="javascript">					])</span></span><br><span class="line"><span class="javascript">				]),</span></span><br><span class="line"><span class="javascript">				h(<span class="string">&#x27;h1&#x27;</span>, &#123; <span class="attr">style</span>: &#123; <span class="attr">color</span>: <span class="string">&#x27;blue&#x27;</span> &#125;, <span class="attr">OnClick</span>: tap02 &#125;, [h(<span class="string">&#x27;nothing.&#x27;</span>)])</span></span><br><span class="line"><span class="javascript">			])</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">			<span class="comment">// let vnode = h(&#x27;bob is handsome guy.&#x27;)</span></span></span><br><span class="line"><span class="javascript">			<span class="comment">// let vnode2 = h(&#x27;alice is a prettier girl.&#x27;)</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">			mount(vnode2, <span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&#x27;o&#x27;</span>, vnode)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">console</span>.log(<span class="string">&#x27;n&#x27;</span>, vnode2)</span></span><br><span class="line"><span class="javascript">			<span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> patch(vnode2, vnode), <span class="number">5000</span>)</span></span><br><span class="line"><span class="javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>手写</category>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>手写</tag>
      </tags>
  </entry>
  <entry>
    <title>手写 new 简单实现</title>
    <url>/2021/11/18/%E6%89%8B%E5%86%99-new-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 实现 new 基本原理*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myNew</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">	<span class="keyword">let</span> Con = [].shift.call(<span class="built_in">arguments</span>)</span><br><span class="line">	obj.__proto__ = Con.prototype</span><br><span class="line">	<span class="keyword">let</span> res = Con.apply(obj, <span class="built_in">arguments</span>)</span><br><span class="line">	<span class="keyword">return</span> res <span class="keyword">instanceof</span> <span class="built_in">Object</span> ? res : obj</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 以下是对实现的分析：</span></span><br><span class="line"><span class="comment">- 创建⼀个空对象</span></span><br><span class="line"><span class="comment">- 获取构造函数</span></span><br><span class="line"><span class="comment">- 设置空对象的原型</span></span><br><span class="line"><span class="comment">- 绑定 this 并执⾏构造函数</span></span><br><span class="line"><span class="comment">- 确保返回值为对象 */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function myNew(obj, ...args) &#123;</span><br><span class="line">	let newObj = Object.create(obj.prototype)</span><br><span class="line">	let result = obj.apply(newObj, args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
        <category>手写系列</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>手写 防抖 debounce</title>
    <url>/2021/11/18/%E6%89%8B%E5%86%99-%E9%98%B2%E6%8A%96-debounce/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> useDebounce = <span class="function">(<span class="params">fn</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    	<span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">    	timer = <span class="built_in">setTimeout</span>(</span><br><span class="line">        <span class="function">()=&gt;</span>&#123;</span><br><span class="line">          fn();</span><br><span class="line">          <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        &#125;</span><br><span class="line">        ,<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>手写系列</category>
        <category>js trick</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>手写call aplly bind</title>
    <url>/2021/11/18/%E6%89%8B%E5%86%99call-aplly-bind/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;jiujue&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">	<span class="built_in">console</span>.log(...args)</span><br><span class="line">&#125;</span><br><span class="line">print.myCall(obj, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">Function</span>.prototype.myCall = <span class="function"><span class="keyword">function</span>(<span class="params">context = <span class="built_in">window</span></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">this</span> !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&#x27;need a function&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	context.fn = <span class="built_in">this</span></span><br><span class="line">	<span class="keyword">const</span> args = [...arguments].slice(<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">const</span> res = context.fn(...args)</span><br><span class="line">	<span class="keyword">delete</span> context.fn</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">	<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.myApply = <span class="function"><span class="keyword">function</span>(<span class="params">context = <span class="built_in">window</span></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">this</span> !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&#x27;need a function&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	context.fn = <span class="built_in">this</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">arguments</span>[<span class="number">1</span>]) &#123;</span><br><span class="line">		<span class="keyword">let</span> res = context.fn(...arguments[<span class="number">1</span>])</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">let</span> res = context.fn()</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">delete</span> context.fn</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> obj = &#123; <span class="attr">name</span>: <span class="string">&#x27;jiujue&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="built_in">this</span>)</span><br><span class="line">	<span class="built_in">console</span>.log(...args)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = print.myBind(obj)</span><br><span class="line">p(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">Function</span>.prototype.myBind = <span class="function"><span class="keyword">function</span>(<span class="params">context = <span class="built_in">window</span></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">this</span> !== <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">throw</span> <span class="built_in">TypeError</span>(<span class="string">&#x27;left value need a function&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	context.fn = <span class="built_in">this</span></span><br><span class="line">	<span class="keyword">const</span> args = [...arguments].slice(<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">..._args</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">const</span> res = context.fn(args.concat(_args))</span><br><span class="line">		<span class="keyword">delete</span> context.fn</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
        <category>手写系列</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>手写instanceof 简单实现</title>
    <url>/2021/11/18/%E6%89%8B%E5%86%99instanceof-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// instanceof 的原理</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myInstanceOf</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">let</span> prototype = right.prototype</span><br><span class="line">	left = left.__proto__</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (left == <span class="literal">null</span> || left == <span class="literal">undefined</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		<span class="keyword">if</span> (left === prototype) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		left = left.__proto__</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 以下是对实现的分析：</span></span><br><span class="line"><span class="comment">- ⾸先获取类型的原型</span></span><br><span class="line"><span class="comment">- 然后获得对象的原型</span></span><br><span class="line"><span class="comment">- 然后⼀直循环判断对象的原型是否等于类型的原型，直到对象原型为 null，因为原型链最终为 null */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<pre><code>function myInstanceof(left, right) &#123;
    if (typeof left !== &#39;object&#39; || right === null) &#123;
        return false
    &#125;
    right = right.prototype
    left = left__proto__
    while (true) &#123;
        if (left === null) return false
        if (left === right) return true
        left = left.left__proto__
    &#125;
&#125;
</code></pre>
]]></content>
      <categories>
        <category>js trick</category>
        <category>手写系列</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>手写promise-简单实现</title>
    <url>/2021/11/18/%E6%89%8B%E5%86%99promise-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_Promise</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="title">constructor</span>(<span class="params">exec</span>)</span> &#123;</span><br><span class="line">		_STATE_MAP = &#123;</span><br><span class="line">			<span class="attr">FUlFILLED</span>: <span class="string">&#x27;FULFILLED&#x27;</span>,</span><br><span class="line">			<span class="attr">PADDING</span>: <span class="string">&#x27;PADDING&#x27;</span>,</span><br><span class="line">			<span class="attr">REJECT</span>: <span class="string">&#x27;REJECT&#x27;</span></span><br><span class="line">		&#125;</span><br><span class="line">		_value = <span class="literal">undefined</span></span><br><span class="line">		_state = _STATE_MAP.PADDING</span><br><span class="line">		_fulfilledFuncs = []</span><br><span class="line">		_rejectFuncs = []</span><br><span class="line">		exec(<span class="built_in">this</span>.resolve.bind(<span class="built_in">this</span>), <span class="built_in">this</span>.reject.bind(<span class="built_in">this</span>))</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">resolve</span>(<span class="params">val</span>)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>._state === <span class="built_in">this</span>._STATE_MAP.PADDING) &#123;</span><br><span class="line">			<span class="built_in">this</span>._state = <span class="built_in">this</span>._STATE_MAP.FUlFILLED</span><br><span class="line">			<span class="built_in">this</span>._value = val</span><br><span class="line">			<span class="built_in">this</span>._fulfilledFuncs.map(<span class="function"><span class="params">it</span> =&gt;</span> it(val))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">reject</span>(<span class="params">val</span>)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>._state === <span class="built_in">this</span>._STATE_MAP.PADDING) &#123;</span><br><span class="line">			<span class="built_in">this</span>._state = <span class="built_in">this</span>._STATE_MAP.REJECT</span><br><span class="line">			<span class="built_in">this</span>._value = val</span><br><span class="line">			<span class="built_in">this</span>._fulfilledFuncs.forEach(<span class="function"><span class="params">it</span> =&gt;</span> it(val))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="title">then</span>(<span class="params">onFulfilled, onRejected</span>)</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">this</span>._state === <span class="built_in">this</span>._STATE_MAP.PADDING) &#123;</span><br><span class="line">			onFulfilled <span class="keyword">instanceof</span> <span class="built_in">Function</span></span><br><span class="line">				? <span class="built_in">this</span>._fulfilledFuncs.push(onFulfilled)</span><br><span class="line">				: <span class="literal">null</span></span><br><span class="line">			onRejected <span class="keyword">instanceof</span> <span class="built_in">Function</span> ? <span class="built_in">this</span>._rejectFuncs.push(onRejected) : <span class="literal">null</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
        <category>手写</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>批量解压 rar (带密码) -- 自己写的 python 小工具</title>
    <url>/2021/11/18/%E6%89%B9%E9%87%8F%E8%A7%A3%E5%8E%8B-rar-%E5%B8%A6%E5%AF%86%E7%A0%81-%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84-python-%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading </span><br><span class="line">suffix = <span class="string">&#x27;.zip&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract</span>(<span class="params">file</span>):</span></span><br><span class="line">  <span class="comment"># os.system(&quot;unrar x -y -p&#x27;&#123;passwd&#125;&#x27;  &#x27;&#123;filename&#125;&#x27; &quot;.format(passwd=&#x27;w5GrlKpEXhbO9&amp;utD!6KWWrFKmjI@XW3&#x27;,filename=it))</span></span><br><span class="line">  os.system(<span class="string">&quot;&#123;exec&#125;  &#x27;&#123;filename&#125;&#x27; &quot;</span>.<span class="built_in">format</span>(<span class="built_in">exec</span>=<span class="string">&#x27;un&#x27;</span>+suffix[<span class="number">1</span>:],filename=it))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPaths</span>(<span class="params">path</span>):</span></span><br><span class="line">  res = os.listdir(path)</span><br><span class="line">  <span class="keyword">return</span> [ os.path.join(os.getcwd(),it) <span class="keyword">for</span> it <span class="keyword">in</span> res <span class="keyword">if</span> it.endswith(suffix)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> it <span class="keyword">in</span> getPaths(<span class="string">&#x27;./&#x27;</span>):</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;*****file****&#x27;</span>,it)</span><br><span class="line">      t1 = threading.Thread(target=extract,args=(it, ))</span><br><span class="line">      t1.start()</span><br><span class="line">      t1.join()</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;Error: 无法启动线程&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python trick</category>
      </categories>
      <tags>
        <tag>python trick</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库: 存储过程/触发器</title>
    <url>/2021/11/18/%E6%95%B0%E6%8D%AE%E5%BA%93-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
    <content><![CDATA[<h2 id="数据库-存储过程-触发器-mysql"><a href="#数据库-存储过程-触发器-mysql" class="headerlink" title="数据库: 存储过程/触发器(mysql)"></a>数据库: 存储过程/触发器(mysql)</h2><ol>
<li>我对数据库存储过程/触发器的理解</li>
</ol>
<ul>
<li>存储过程: 和编程里面的函数类似,只需要掉用,就会执行预先设定好的过程</li>
<li>触发器: 可以在每次sql操作的前后执行动作,钩子函数.(增强sql语句的功能)</li>
</ul>
<ol start="2">
<li><p>简单练习</p>
<ol start="0">
<li>创建数据库<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `foodfactory` <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>创建表 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `food` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `fname` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `stock` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `<span class="type">date</span>` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `provider` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `pname` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `addr` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tel` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `f2p_fk` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `f_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `p_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `f_id` (`f_id`),</span><br><span class="line">  KEY `p_id` (`p_id`),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `f_id` <span class="keyword">FOREIGN</span> KEY (`f_id`) <span class="keyword">REFERENCES</span> `food` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `p_id` <span class="keyword">FOREIGN</span> KEY (`p_id`) <span class="keyword">REFERENCES</span> `provider` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">SET</span> <span class="keyword">NULL</span></span><br><span class="line">) ;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>多表查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> food ,provider ,f2p_fk  <span class="keyword">WHERE</span> f2p_fk.id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">AND</span> f2p_fk.p_id <span class="operator">=</span> provider.id <span class="keyword">AND</span> f2p_fk.f_id <span class="operator">=</span> food.id</span><br></pre></td></tr></table></figure></li>
<li><p>修改语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATE foodfactory.food <span class="keyword">SET</span> stock <span class="operator">=</span> <span class="string">&#x27;200&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>存储过程</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> reStock(<span class="keyword">IN</span> f_id <span class="type">INTEGER</span>) <span class="keyword">BEGIN</span>　 UPDATE foodfactory.food <span class="keyword">SET</span> stock <span class="operator">=</span> <span class="string">&#x27;0&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> f_id; <span class="keyword">END</span><span class="operator">^</span></span><br></pre></td></tr></table></figure></li>
<li><p>触发器</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">delimiter <span class="operator">^</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> upd_check BEFORE UPDATE <span class="keyword">ON</span> food</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"> <span class="keyword">BEGIN</span></span><br><span class="line">　　IF NEW.stock <span class="operator">&lt;</span> <span class="number">0</span> <span class="keyword">THEN</span></span><br><span class="line">　　<span class="keyword">SET</span> NEW.stock <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">　<span class="keyword">END</span> IF;</span><br><span class="line">    <span class="keyword">END</span><span class="operator">^</span></span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>文字 超出隐藏 ... 样式</title>
    <url>/2021/11/18/%E6%96%87%E5%AD%97-%E8%B6%85%E5%87%BA%E9%9A%90%E8%97%8F-%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.text-nowrap</span>&#123;</span><br><span class="line">    <span class="attribute">white-space</span>:norwrap;</span><br><span class="line">    <span class="attribute">Text-overflow</span>:ellipsis;</span><br><span class="line">    <span class="attribute">Overflow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>css trick</category>
      </categories>
      <tags>
        <tag>css trick</tag>
      </tags>
  </entry>
  <entry>
    <title>手写深拷贝-简单实现</title>
    <url>/2021/11/18/%E6%B7%B1%E6%8B%B7%E8%B4%9D-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clone</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> obj === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">			<span class="keyword">let</span> res = []</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; obj.length; index++) &#123;</span><br><span class="line">				res[index] = clone(obj[index])</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> res</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span><br><span class="line">			<span class="keyword">let</span> res = &#123;&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">				res[key] = clone(obj[key])</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> res</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 这里还可以考虑其他特殊类型例如date regex</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> obj</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;my&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> obj1 = [<span class="number">12</span>, &#123; <span class="attr">a</span>: <span class="number">11</span>, <span class="attr">b</span>: <span class="number">22</span> &#125;, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">var</span> obj2 = clone(obj1)</span><br><span class="line">obj2[<span class="number">1</span>].a += <span class="number">5</span></span><br><span class="line"><span class="built_in">console</span>.log(obj1, obj2)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>js trick</category>
        <category>手写系列</category>
      </categories>
      <tags>
        <tag>js trick</tag>
        <tag>手写系列</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次 c 语言 的 多线程查找 简单实现</title>
    <url>/2021/11/18/%E8%AE%B0%E4%B8%80%E6%AC%A1-c-%E8%AF%AD%E8%A8%80-%E7%9A%84-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%9F%A5%E6%89%BE-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="记一次-c-语言-的-多线程查找-简单实现"><a href="#记一次-c-语言-的-多线程查找-简单实现" class="headerlink" title="记一次 c 语言 的 多线程查找 简单实现"></a><strong>记一次 c 语言 的 多线程查找 简单实现</strong></h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//仅供参考学习</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS <span class="comment">//屏蔽 vs 的a</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;process.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;memory.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//直接改 m_MAX 的值则是改变总的范围</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m_MAX 250000 <span class="comment">//最好是 totalThread 的整数倍</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">s</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> *begin;<span class="comment">//每个线程其实索引地址</span></span><br><span class="line">    <span class="keyword">int</span> lenth;<span class="comment">//索引长度</span></span><br><span class="line">    <span class="keyword">int</span> target;<span class="comment">//need find</span></span><br><span class="line">    <span class="keyword">int</span> Id;<span class="comment">//thread id</span></span><br><span class="line">    <span class="keyword">int</span> *flag;<span class="comment">//线程之间通信</span></span><br><span class="line">    <span class="keyword">int</span> *isFind;<span class="comment">//附加功能标记那个线程找到的</span></span><br><span class="line">&#125;<span class="keyword">s_t</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">void</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">s_t</span>* pS = (<span class="keyword">s_t</span>*)p;<span class="comment">//indo</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>* cur = <span class="literal">NULL</span>;<span class="comment">//need find number addres</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (cur = pS-&gt;begin; cur != pS-&gt;begin + pS-&gt;lenth; ++cur)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">1</span> == *(pS-&gt;flag))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> str[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">            <span class="built_in">sprintf</span>(str, <span class="string">&quot; thread %d incapable been thread %d Preemptive\n&quot;</span>, pS-&gt;Id, *(pS-&gt;isFind));</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">            _endthread();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((*cur) == pS-&gt;target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(TEXT(<span class="string">&quot;thread %d finde \n&quot;</span>), pS-&gt;Id);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>, *cur);</span><br><span class="line">            Sleep(<span class="number">10</span>);</span><br><span class="line">            *(pS-&gt;flag) = <span class="number">1</span>;</span><br><span class="line">            *(pS-&gt;isFind) = pS-&gt;Id;</span><br><span class="line">    </span><br><span class="line">            _endthread();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;<span class="comment">//快语句 看起来 代码整洁</span></span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">        <span class="built_in">sprintf</span>(str, <span class="string">&quot; Thread %.5d is incapable \n&quot;</span>, pS-&gt;Id, *(pS-&gt;isFind));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _endthread();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要寻找的源</span></span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[m_MAX];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//标志位</span></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> isFind = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//随机的目标</span></span><br><span class="line">    <span class="keyword">int</span> target = rand() % m_MAX;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Need find number is %d \n&quot;</span>, target);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> totalThread = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//线程需要的信息 </span></span><br><span class="line">    <span class="keyword">s_t</span> s[<span class="number">50</span>];    <span class="comment">//设定线程个数    ## 这里的 50 与 totalThread 变量是相关的 要改都改</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> dividedDataSize = (m_MAX / totalThread);        <span class="comment">//设定每个线程需要索引的大小 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//随机初始化 源内的数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m_MAX; ++j) &#123;        </span><br><span class="line">        <span class="built_in">array</span>[j] = rand()%m_MAX;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化每个线程</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalThread; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i].begin = <span class="built_in">array</span> + (i*dividedDataSize);</span><br><span class="line">        s[i].Id = i;</span><br><span class="line">        s[i].lenth = (dividedDataSize);</span><br><span class="line">        s[i].target = target;</span><br><span class="line">        s[i].flag = &amp;flag;</span><br><span class="line">        s[i].isFind = &amp;isFind;</span><br><span class="line">        _beginthread(find, <span class="number">0</span>, &amp;s[i]);</span><br><span class="line">        Sleep(<span class="number">10</span>);　　<span class="comment">//避免出现线程访问冲突</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>c</category>
      </categories>
      <tags>
        <tag>c</tag>
      </tags>
  </entry>
  <entry>
    <title>面试 一面 js 基础面题目</title>
    <url>/2021/11/18/%E9%9D%A2%E8%AF%95-js-%E5%9F%BA%E7%A1%80%E9%9D%A2%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<ol>
<li><p>typeof 能判断哪些类型</p>
<ol>
<li>识别所有值类型</li>
<li>识别函数</li>
<li>判断是否为引用类型(不可再发)</li>
</ol>
</li>
<li><p>何时使用=== 何时使用==</p>
</li>
<li><p>值类型和应用类型的区别</p>
</li>
<li><p>手写深浅拷贝</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> deepClone = <span class="function">(<span class="params">obj = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">typeof</span> obj !== <span class="string">&#x27;object&#x27;</span> || obj == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> obj</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">let</span> res</span><br><span class="line">	<span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">		res = []</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		res = &#123;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">Object</span>.hasOwnProperty.call(obj, key)) &#123;</span><br><span class="line">			res[key] = deepClone(obj[key])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>如何准确判断一个变量是不是数组</p>
</li>
<li><p>手写一个简易的jquery,考虑插件(往原型上挂载)和拓展性(继承)</p>
</li>
<li><p>class 的原型本质 ,怎么理解</p>
</li>
<li><p>this的不用引用场景,如何取值</p>
<ol>
<li>备注:this是执行是才能决定是那个</li>
</ol>
</li>
<li><p>手写bind</p>
</li>
<li><p>实际开发中闭包的引用场景,举例说明</p>
<ol>
<li>函数作为返回值,函数作为参数</li>
<li>备注:所有自由变量的查找,都是在定义的作用域向商超查找,不是执行</li>
</ol>
</li>
<li><p>创建10个标签,点击弹出对应序号</p>
</li>
<li><p>dom是那种数据结构</p>
</li>
<li><p>dom操作的常用api</p>
</li>
<li><p>attr和property的区别</p>
</li>
<li><p>一次性插入多个节点,考虑性能</p>
</li>
<li><p>跨域:端口 协议 域名 不同为不同源,不同源访问为跨域</p>
</li>
<li><p>手写trim str.replace(‘/^\w+/‘,’’).replace(/\w+$/)</p>
</li>
<li><p>如何捕获js中的异常</p>
<ol>
<li>try cath 手动捕获<br>   2. window.onerror 自动捕获</li>
</ol>
</li>
<li><p>window.onload 和 DOMContentLoaded 的区别</p>
</li>
<li><p>js 创建10个<code>&lt;a&gt;</code> 标签,点击时弹出对应的序号</p>
</li>
<li><p>手写节流 throttle 、防抖 debounce</p>
</li>
<li><p>promise 解决了什么问题</p>
</li>
</ol>
]]></content>
      <categories>
        <category>interview</category>
      </categories>
      <tags>
        <tag>interview</tag>
      </tags>
  </entry>
  <entry>
    <title>interview vue 题目</title>
    <url>/2021/11/18/%E9%9D%A2%E8%AF%95-vue-%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<ol>
<li><p>Vue 组件如何通讯</p>
<ol>
<li>父子组件props 和 this.$emit</li>
<li>自定义事件event.$no event.$off event.$emit</li>
<li>Vex</li>
</ol>
</li>
<li><p>Vue 组件生命周期（父子组件）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">加载渲染过程</span><br><span class="line">　　父beforeCreate-&gt;父created-&gt;父beforeMount-&gt;子beforeCreate-&gt;子created-&gt;子beforeMount-&gt;子mounted-&gt;父mounted</span><br><span class="line">子组件更新过程</span><br><span class="line">　　父beforeUpdate-&gt;子beforeUpdate-&gt;子updated-&gt;父updated</span><br><span class="line">父组件更新过程</span><br><span class="line">　　父beforeUpdate-&gt;父updated</span><br><span class="line">销毁过程</span><br><span class="line">　　父beforeDestroy-&gt;子beforeDestroy-&gt;子destroyed-&gt;父destroyed</span><br></pre></td></tr></table></figure></li>
<li><p>描述组件渲染和更新的过程</p>
</li>
</ol>
<ol start="4">
<li><p>v-model的实现原理</p>
<ol>
<li>input元素的value=this.name</li>
<li>绑定input事件this.name = $event.target.value</li>
<li>data更新触发re-render</li>
</ol>
</li>
<li><p>对MVVM的理解</p>
</li>
<li><p>computed有什么特点</p>
<ol>
<li>会存在缓存,如果数据没有发生变化会使用缓存里的数据</li>
</ol>
</li>
<li><p>为何data必须是一个函数</p>
<ol>
<li>vue组件化定义的vue文件,实际上会变成一个类,在使用时相对于实例化;在函数中时,数据在闭包中,不会污染</li>
</ol>
</li>
<li><p>ajax 请求应该放在那个生命周期</p>
<ol>
<li>mounted</li>
<li>js是单线程的,ajax异步获取数据</li>
<li>放在mounted之前的生命周期没有用,只会让逻辑混乱</li>
</ol>
</li>
<li><p>如何将组件所有props传递给子组件</p>
<ol>
<li><p>$props </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">User</span> <span class="attr">v-bind</span>=<span class="string">&#x27;$props&#x27;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>如何自定义组件实现v-model(设计一个获取颜色的组件)</p>
</li>
<li><p>多个组件相同逻辑抽离</p>
<pre><code>1. mixin 缺点较为明显,vue3 已经废弃
</code></pre>
</li>
<li><p>何时用异步组件</p>
<pre><code>1. 加载大组件
2. 路由异步加载
3. 导入的时候使用import,单独打包一个js,用到才回去加载
</code></pre>
</li>
<li><p>何时使用keep-alive (性能优化)</p>
<pre><code>1. 缓存组件,不需要重复渲染
   1. 例如多个静态tab页的切换
   2. 列表页到详情页跳转记录浏览位置
</code></pre>
</li>
<li><p>何时需要使用beforeDestroy</p>
<pre><code>1. 解绑自定义事件event.$off

2. 清楚定时器

3. 解绑自定义DOM事件,如Windows scroll

   **以上都是为了防止内存泄漏**
</code></pre>
</li>
<li><p>什么是作用域插槽</p>
<pre><code>1. 父组件使用定义子组件的插槽中的数据,可以通过作用域插槽获取到
</code></pre>
</li>
<li><p>vuex 中action和mutation 有何区别</p>
<pre><code>1. action中处理异步,mutation不可以
2. mutation一般做原子操作
3. action可以整合多个mutation
</code></pre>
</li>
<li><p>vue-router 常用的路由模式</p>
<pre><code>1. hash 默认,通过监听 windows.ohashchange 来实现
   1. to-b 的系统推荐hash 简单实用
   2. 完全由前端控制,不会传到后端
2. H5 history ,通过history.pushState 和 Windows.onpopstate
   1. to-c 的系统，可以选择h5history，但需要服务端支持
</code></pre>
</li>
<li><p>如何配置vue-router 异步加载</p>
<pre><code>1. 通过()=&gt;import(组件) 导入,而不是直接静态导入
</code></pre>
</li>
<li><p>用vnode描述一个dom结构</p>
<pre><code><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">tag</span>:<span class="string">&#x27;div&#x27;</span>,</span><br><span class="line">    <span class="attr">props</span>:&#123;</span><br><span class="line">      <span class="attr">className</span>:<span class="string">&#x27;container&#x27;</span>,</span><br><span class="line">        <span class="attr">id</span>:<span class="string">&#x27;div1&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>:[</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="attr">tag</span>:<span class="string">&#x27;p&#x27;</span>,</span><br><span class="line">              <span class="attr">props</span>:&#123;</span><br><span class="line">                <span class="attr">className</span>:<span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">                <span class="attr">id</span>:<span class="string">&#x27;p1&#x27;</span></span><br><span class="line">                <span class="attr">style</span>:<span class="string">&#x27;color:red;font-size:20px&#x27;</span></span><br><span class="line">              &#125;,</span><br><span class="line">    			&#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>监听data变化的核心API是什么</p>
<pre><code>1. object.defineProperty
2. 深度监听对象:使用递归
3. 深度监听素组:在Array的原型上写一个新的原型,拦截对应的方法,再将这个原型设置为Array的原型
   1. 为什么不直接重写原型?
   2. 防止污染
4. Proxy 可以原生支持监听数组变化(es6的)
</code></pre>
</li>
<li><p>描述响应式原理</p>
<pre><code>1. 监听data变化
2. 组件渲染和更新的过程
</code></pre>
</li>
<li><p>diff算法的时间复杂度</p>
<pre><code>1. vue的diff算法是o(n)
   1. 是在o(n^3)基础上做了调整
      - 直比较同一层
      - 父级不同则销毁重建,不再比较子级
      - 通过key和tag来判断是否为同一个
</code></pre>
</li>
<li><p>简述diff算法过程</p>
<pre><code>1. patch(elem,vnode) 和 patch(vnode,newVnode)
2. patchVnode 和 addVnodes 和removeVnodes
3. updateChildre(key的重要性)
4. vue为何是异步渲染,$nextTick什么用处
   1. 异步渲染(合并data修改),提高渲染性能
   2. $nextTick 在DOM 更新之后,触发回调
</code></pre>
</li>
<li><p>vue常见性能优化</p>
<pre><code>1. 合理使用v-show 和 v-if
   1. v-show 是使用css来控制,适合经常切换
   2. v-if 是框架支持的语法,会在编译成render函数是生效,切换花销大
2. 合理使用computed
   1. 存在缓存机制,只要数据没有变化,就使用缓存
3. v-for加key,避免和v-if同时使用
   1. key可以提高diff算法的速度
   2. v-if的优先级低,vue会先把遍历语法执行完成才会执行v-if,带来了不必要的性能消耗
4. 自定义事件,DOM事件要及时销毁
5. 合理使用异步组件
6. 合理使用keep-live
7. data层级不要太深
   1. ·数据监听会一层一层的去监听,只有监听完了才会继续执行
   2. 数据结构尽量设计的扁平一些
8. 使用vue-loader在还发环境做模版编译(预编译)
9. webpack 层面的优化
10. 前端通用的性能优化,如图片懒加载
11. 使用服务端渲染(SSR)
</code></pre>
</li>
<li><p>vue3</p>
<pre><code>1. 全部用ts重写,Proxy重写响应式 
2. 性能提升,代码量减少(打包出的生成环境代码)
3. reflect 作用
   1. 和proxy能力一一对应
   2. 规范化、标准化、函数式
   3. 替代掉Object上的工具函数
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>vue</category>
        <category>interview</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>interview</tag>
      </tags>
  </entry>
</search>
